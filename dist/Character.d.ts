import 'phaser';
import { CharacterConfig, ICharacter } from './ICharacter';
import { ILevelComponents } from './ILevel';
import { CharMoveAnims, Dir } from './joegameTypes';
import VoxBox from './components/VoxBox';
export default class Character extends Phaser.GameObjects.Container implements ICharacter {
    speed: number;
    readonly name: string;
    dashDistance: number;
    charge: number;
    readonly animKeys: CharMoveAnims;
    dashDrag: number;
    dashVel: number;
    sprite: Phaser.GameObjects.Sprite;
    voxbox: VoxBox;
    depth: number;
    facing: Dir;
    onPlatform: boolean;
    auto: boolean;
    player: boolean;
    groundVel: Phaser.Types.Math.Vector2Like;
    charBody: Phaser.Physics.Arcade.Body;
    level: ILevelComponents;
    constructor(config: CharacterConfig);
    changeGroundVel(): void;
    move(dir: Dir): void;
    dash(dir: Dir): void;
    face(dir: Dir): void;
    stop(face?: Dir): void;
    align(): Phaser.Types.Math.Vector2Like;
    jumpUp(): void;
    jumpBack(dir: Dir): void;
    transport(x: number, y: number): void;
    transportNudge(x: number, y: number): void;
    minusCharge(): void;
    playAnim(anim: string): void;
    stopAnim(): void;
    showDashboxes(): void;
    minusDashbox(): void;
    showLabel(): void;
    hideLabel(): void;
    speak(msg: string, speed?: number): Promise<void>;
}
