{"version":3,"sources":["../src/gameconfig.ts"],"names":["createJoegameConfig","gdata","res","type","Phaser","WEBGL","render","pixelArt","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","width","height","parent","dom","createContainer","physics","default","arcade","gravity","y","debug","scene","preload","scenee","load","json","create","game","key"],"mappings":";;;;;;;;;AAAA;;AAGA;AACA;AACA;AACA;AACe,SAASA,mBAAT,CAA6BC,KAA7B,EAAwDC,GAAxD,EAAqG;AAChH,SAAO;AACHC,IAAAA,IAAI,EAAEC,MAAM,CAACC,KADV;AAEHC,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFL;AAKHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAEL,MAAM,CAACM,KAAP,CAAaC,GADhB;AAEHC,MAAAA,UAAU,EAAER,MAAM,CAACM,KAAP,CAAaG,WAFtB;AAGHC,MAAAA,KAAK,EAAE,GAHJ;AAIHC,MAAAA,MAAM,EAAE;AAJL,KALJ;AAWHC,IAAAA,MAAM,EAAE,OAXL;AAYHC,IAAAA,GAAG,EAAE;AACDC,MAAAA,eAAe,EAAE;AADhB,KAZF;AAeHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,QADJ;AAELC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL,SADL;AAEJC,QAAAA,KAAK,EAAE;AAFH;AAFH,KAfN;AAuBHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,OADG,qBACO;AACN;AACA,YAAMC,MAAM,GAAG,IAAf;AACAA,QAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,OAAjB,EAA0B5B,KAA1B,EAHM,CAIN;AACA;AACH,OAPE;AAQH6B,MAAAA,MARG,oBAQM;AACL;AACA,YAAMH,MAAM,GAAG,IAAf;AACAzB,QAAAA,GAAG,CAACyB,MAAM,CAACI,IAAR,CAAH;AACH,OAZE;AAaHC,MAAAA,GAAG,EAAE;AAbF;AAvBJ,GAAP;AAwCH","sourcesContent":["import * as Phaser from 'phaser'\nimport { IWikiData } from './utils/parseWikiData'\n\n/**\n * This returns a full config you can pass into `new Phaser.Game(config)`\n * */\n// TODO type for resolver\nexport default function createJoegameConfig(gdata: IWikiData | string, res: Function): Phaser.Types.Core.GameConfig {\n    return {\n        type: Phaser.WEBGL,\n        render: {\n            pixelArt: true\n        },\n        scale: {\n            mode: Phaser.Scale.FIT,\n            autoCenter: Phaser.Scale.CENTER_BOTH,\n            width: 800,\n            height: 600\n        },\n        parent: 'frame',\n        dom: {\n            createContainer: true\n        },\n        physics: {\n            default: 'arcade',\n            arcade: {\n                gravity: { y: 0 },\n                debug: false\n\n            }\n        },\n        scene: {\n            preload() {\n                // TODO properly ignore this in some typescript way\n                const scenee = this as Phaser.Scene\n                scenee.load.json('gdata', gdata)\n                // rawmap\n                // this.load.json(getMapKeyNameRaw(data.mapjson),data.mapjson)\n            },\n            create() {\n                // loadLevel(this, data)\n                const scenee = this as Phaser.Scene\n                res(scenee.game)\n            },\n            key: 'GameInitScene'\n        }\n\n    }\n}\n"],"file":"gameconfig.js"}