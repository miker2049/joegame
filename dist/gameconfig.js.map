{"version":3,"sources":["../src/gameconfig.ts"],"names":["createJoegameConfig","gdata","convoManifest","res","type","Phaser","WEBGL","render","pixelArt","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","width","height","parent","dom","createContainer","physics","default","arcade","gravity","y","debug","scene","preload","scenee","load","json","files","create","game","key"],"mappings":";;;;;;;;;AAAA;;AAGA;AACA;AACA;AACA;AACe,SAASA,mBAAT,CAA8BC,KAA9B,EAAyDC,aAAzD,EAAwFC,GAAxF,EAAqI;AAClJ,SAAO;AACLC,IAAAA,IAAI,EAAEC,MAAM,CAACC,KADR;AAELC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAFH;AAKLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEL,MAAM,CAACM,KAAP,CAAaC,GADd;AAELC,MAAAA,UAAU,EAAER,MAAM,CAACM,KAAP,CAAaG,WAFpB;AAGLC,MAAAA,KAAK,EAAE,GAHF;AAILC,MAAAA,MAAM,EAAE;AAJH,KALF;AAWLC,IAAAA,MAAM,EAAE,OAXH;AAYLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,eAAe,EAAE;AADd,KAZA;AAeLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,QADF;AAEPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL,SADH;AAENC,QAAAA,KAAK,EAAE;AAFD;AAFD,KAfJ;AAuBLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OADK,qBACM;AACT;AACA,YAAMC,MAAM,GAAG,IAAf;AACAA,QAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,OAAjB,EAA0B7B,KAA1B;AACA2B,QAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,gBAAjB,EAAmC;AAAEC,UAAAA,KAAK,EAAE7B;AAAT,SAAnC,EAJS,CAKT;AACA;AACD,OARI;AASL8B,MAAAA,MATK,oBASK;AACR;AACA,YAAMJ,MAAM,GAAG,IAAf;AACAzB,QAAAA,GAAG,CAACyB,MAAM,CAACK,IAAR,CAAH;AACD,OAbI;AAcLC,MAAAA,GAAG,EAAE;AAdA;AAvBF,GAAP;AAyCD","sourcesContent":["import * as Phaser from 'phaser'\nimport { IWikiData } from './utils/parseWikiData'\n\n/**\n * This returns a full config you can pass into `new Phaser.Game(config)`\n * */\n// TODO type for resolver\nexport default function createJoegameConfig (gdata: IWikiData | string, convoManifest: any[] | string, res: Function): Phaser.Types.Core.GameConfig {\n  return {\n    type: Phaser.WEBGL,\n    render: {\n      pixelArt: true\n    },\n    scale: {\n      mode: Phaser.Scale.FIT,\n      autoCenter: Phaser.Scale.CENTER_BOTH,\n      width: 800,\n      height: 600\n    },\n    parent: 'frame',\n    dom: {\n      createContainer: true\n    },\n    physics: {\n      default: 'arcade',\n      arcade: {\n        gravity: { y: 0 },\n        debug: false\n\n      }\n    },\n    scene: {\n      preload () {\n        // TODO properly ignore this in some typescript way\n        const scenee = this as Phaser.Scene\n        scenee.load.json('gdata', gdata)\n        scenee.load.json('convo-manifest', { files: convoManifest })\n        // rawmap\n        // this.load.json(getMapKeyNameRaw(data.mapjson),data.mapjson)\n      },\n      create () {\n        // loadLevel(this, data)\n        const scenee = this as Phaser.Scene\n        res(scenee.game)\n      },\n      key: 'GameInitScene'\n    }\n\n  }\n}\n"],"file":"gameconfig.js"}