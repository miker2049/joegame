{"version":3,"sources":["../../src/actions/runCinematicNode.ts"],"names":["level","node","yarnjson","scene","cache","json","get","key","textWindow","game","x","y","width","renderer","height","additionalStyle","runner","run","result","constructor","name","text","appendNewLineMDText","Promise","resolve","setTimeout","command","console","log"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;iFAEe,iBAAeA,KAAf,EAAwCC,IAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,QADK,GACMF,KAAK,CAACG,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,GAAvB,CAA2B,qCAAmBN,KAAK,CAACO,GAAzB,CAA3B,CADN;AAELC,YAAAA,UAFK,GAEQ,+BAAiB;AAChCC,cAAAA,IAAI,EAAET,KAAK,CAACG,KAAN,CAAYM,IADc;AAEhCC,cAAAA,CAAC,EAAE,EAF6B;AAGhCC,cAAAA,CAAC,EAAE,EAH6B;AAIhCC,cAAAA,KAAK,EAAEZ,KAAK,CAACG,KAAN,CAAYU,QAAZ,CAAqBD,KAArB,IAA8B,IAAI,CAAlC,CAJyB;AAKhCE,cAAAA,MAAM,EAAEd,KAAK,CAACG,KAAN,CAAYU,QAAZ,CAAqBC,MAArB,IAA+B,IAAI,CAAnC,CALwB;AAMhCC,cAAAA,eAAe,EAAE;AANe,aAAjB,CAFR;AAULC,YAAAA,MAVK,GAUI,+BAAiBhB,KAAjB,EAAwBE,QAAxB,EAAkCM,UAAlC,CAVJ;AAAA,mDAWQQ,MAAM,CAACC,GAAP,CAAWhB,IAAX,CAXR;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWFiB,YAAAA,MAXE;AAAA,0BAYCA,MAAM,CAACC,WAAP,CAAmBC,IAZpB;AAAA,4CAaE,YAbF,wBAmBE,eAnBF,wBA2BE,eA3BF;AAAA;;AAAA;AAAA;AAAA,mBAcO,kCAAeF,MAAD,CAAuBG,IAArC,EAA2Cb,UAA3C,EAAuDR,KAAK,CAACG,KAA7D,EAAoE,EAApE,CAdP;;AAAA;AAeCK,YAAAA,UAAU,CAACc,mBAAX,CAA+B,EAA/B;AAfD;AAAA,mBAgBO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,qBAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;AAAA,aAAnB,CAhBP;;AAAA;AAAA;;AAAA;AAoBOE,YAAAA,OApBP,GAoBiBR,MApBjB;AAqBCS,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AArBD,kBAsBKA,OAAO,CAACR,MAAR,YAA0BK,OAtB/B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuBWG,OAAO,CAACR,MAvBnB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { CommandResult, TextResult } from 'bondage'\nimport 'phaser'\nimport createCineRunner from '../factories/createCineRunner'\nimport createTextWindow from '../factories/createTextWindow'\nimport { ILevelComponents } from '../ILevel'\nimport { getDialogueKeyName } from '../utils/getKeyNames'\nimport { typewriteText } from '../utils/typewriteText'\n\nexport default async function(level: ILevelComponents, node: string) {\n    const yarnjson = level.scene.cache.json.get(getDialogueKeyName(level.key))\n    const textWindow = createTextWindow({\n        game: level.scene.game,\n        x: 20,\n        y: 20,\n        width: level.scene.renderer.width * (2 / 3),\n        height: level.scene.renderer.height * (1 / 3),\n        additionalStyle: \"padding-top: 1em\"\n    })\n    const runner = createCineRunner(level, yarnjson, textWindow)\n    for (let result of runner.run(node)) {\n        switch (result.constructor.name) {\n            case \"TextResult\": {\n                await typewriteText((result as TextResult).text, textWindow, level.scene, 50)\n                textWindow.appendNewLineMDText('')\n                await new Promise(resolve => setTimeout(resolve, 1000))\n                break;\n            }\n            case \"CommandResult\": {\n                const command = result as CommandResult\n                console.log(command)\n                if (command.result instanceof Promise) {\n                    await command.result\n                }\n                break;\n            }\n            case \"OptionsResult\": {\n                break;\n            }\n        }\n    }\n}\n"],"file":"runCinematicNode.js"}