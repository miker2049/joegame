{"version":3,"sources":["../../src/actions/playMIDI.ts"],"names":["midiURL","sfURL","fetch","midiBuff","sfontBuffer","context","AudioContext","audioWorklet","addModule","synth","JSSynth","AudioWorkletNodeSynthesizer","init","sampleRate","audioNode","createAudioNode","connect","destination","arrayBuffer","loadSFont","addSMFDataToPlayer","playPlayer"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;iFAEe,iBAAeA,OAAf,EAAgCC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACYC,KAAK,CAACF,OAAD,CADjB;;AAAA;AACLG,YAAAA,QADK;AAAA;AAAA,mBAEeD,KAAK,CAACD,KAAD,CAFpB;;AAAA;AAELG,YAAAA,WAFK;AAGLC,YAAAA,OAHK,GAGK,IAAIC,YAAJ,EAHL;AAAA;AAAA,mBAILD,OAAO,CAACE,YAAR,CAAqBC,SAArB,CAA+B,iCAA/B,CAJK;;AAAA;AAAA;AAAA,mBAKLH,OAAO,CAACE,YAAR,CAAqBC,SAArB,CAA+B,oCAA/B,CALK;;AAAA;AAMX;AACMC,YAAAA,KAPK,GAOG,IAAIC,uBAAQC,2BAAZ,EAPH;AAQXF,YAAAA,KAAK,CAACG,IAAN,CAAWP,OAAO,CAACQ,UAAnB,EARW,CASX;AACA;AACA;;AACMC,YAAAA,SAZK,GAYOL,KAAK,CAACM,eAAN,CAAsBV,OAAtB,CAZP;AAaXS,YAAAA,SAAS,CAACE,OAAV,CAAkBX,OAAO,CAACY,WAA1B,EAbW,CAa4B;AACvC;;AAdW,0BAeLR,KAfK;AAAA;AAAA,mBAeiBL,WAAW,CAACc,WAAZ,EAfjB;;AAAA;AAAA;AAAA;AAAA,+BAeCC,SAfD;;AAAA;AAAA,0BAgBLV,KAhBK;AAAA;AAAA,mBAgB0BN,QAAQ,CAACe,WAAT,EAhB1B;;AAAA;AAAA;AAAA;AAAA,+BAgBCE,kBAhBD;;AAAA;AAAA,6CAiBJX,KAAK,CAACY,UAAN,EAjBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import JSSynth from 'js-synthesizer'\n\nexport default async function(midiURL: string, sfURL: string) {\n    const midiBuff = await fetch(midiURL)\n    const sfontBuffer = await fetch(sfURL)\n    const context = new AudioContext()\n    await context.audioWorklet.addModule('/joegame/libfluidsynth-2.1.3.js')\n    await context.audioWorklet.addModule('/joegame/js-synthesizer.worklet.js')\n    // Create the synthesizer instance for AudioWorkletNode\n    const synth = new JSSynth.AudioWorkletNodeSynthesizer()\n    synth.init(context.sampleRate)\n    // You must create AudioWorkletNode before using other methods\n    // (This is because the message port is not available until the\n    // AudioWorkletNode is created)\n    const audioNode = synth.createAudioNode(context)\n    audioNode.connect(context.destination) // or another node...\n    // After node creation, you can use Synthesizer methods\n    await synth.loadSFont(await sfontBuffer.arrayBuffer())\n    await synth.addSMFDataToPlayer(await midiBuff.arrayBuffer())\n    return synth.playPlayer()\n}\n"],"file":"playMIDI.js"}