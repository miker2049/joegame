{"version":3,"sources":["../../src/actions/addAllTweetConvosFromLayer.ts"],"names":["level","layer","map","getObjectLayer","convos","mani","JSON","parse","stringify","scene","cache","json","get","objects","obj_","convoIDD","charGroup","properties","find","prop","name","value","length","pop","files","x","y","push"],"mappings":";;;;;;;;;;;;;;;AACA;;AAEA;;;;;;;iFAEe,iBAAeA,KAAf,EAAwCC,KAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACND,KAAK,CAACE,GAAN,CAAUC,cAAV,CAAyBF,KAAzB,CADM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEPG,YAAAA,MAFO,GAEgB,EAFhB;AAIPC,YAAAA,IAJO,GAIAC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACS,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,GAAvB,CAA2B,gBAA3B,CAAf,CAAX,CAJA;AAAA;AAAA;AAAA;AAAA,qDAKYZ,KAAK,CAACE,GAAN,CAAUC,cAAV,CAAyBF,KAAzB,EAAgCY,OAL5C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAKIC,YAAAA,IALJ;AAMHC,YAAAA,QANG,WAOP;;AACMC,YAAAA,SARC,gDAQWF,IAAI,CAACG,UARhB,+EAQW,iBAAiBC,IAAjB,CAAsB,UAACC,IAAD;AAAA,qBAA2CA,IAAI,CAACC,IAAL,KAAc,WAAzD;AAAA,aAAtB,CARX,2DAQW,uBAA6FC,KARxG,yEAQiH,KARjH;;AASP,gBAAIhB,IAAI,CAACiB,MAAL,GAAc,CAAlB,EAAqB;AACjBP,cAAAA,QAAQ,GAAG,yBAAQV,IAAR,EAAckB,GAAd,EAAX;AACH,aAFD,MAEO;AACHlB,cAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACS,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,GAAvB,CAA2B,gBAA3B,CAAf,CAAX,CAAP;AACAP,cAAAA,IAAI,GAAGA,IAAI,CAACmB,KAAZ;AACAT,cAAAA,QAAQ,GAAG,yBAAQV,IAAR,EAAckB,GAAd,EAAX;AACH;;AAfM,0BAgBPnB,MAhBO;AAAA;AAAA,mBAgBW,+BAAiBJ,KAAjB,aAAwBc,IAAI,CAACW,CAA7B,6CAAkC,CAAlC,aAAqCX,IAAI,CAACY,CAA1C,6CAA+C,CAA/C,EAAkDV,SAAlD,EAA6DD,QAA7D,CAhBX;;AAAA;AAAA;;AAAA,wBAgBAY,IAhBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,6CAkBJvB,MAlBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import TweetConvo from '../components/TweetConvo'\nimport createTweetConvo from '../factories/createTweetConvo'\nimport { ILevelComponents } from '../ILevel'\nimport shuffle from '../utils/shuffleArr'\n\nexport default async function(level: ILevelComponents, layer: string): Promise<TweetConvo[] | undefined> {\n    if (!level.map.getObjectLayer(layer)) { return }\n    let convos: TweetConvo[] = []\n\n    let mani = JSON.parse(JSON.stringify(level.scene.cache.json.get('convo-manifest')))\n    for await (let obj_ of level.map.getObjectLayer(layer).objects) {\n        let convoIDD: string\n        // const coord = level.map.tileToWorldXY(obj_.x, obj_.y)\n        const charGroup = obj_.properties?.find((prop: { name: string, value: string }) => prop.name === 'charGroup')?.value ?? 'all'\n        if (mani.length > 0) {\n            convoIDD = shuffle(mani).pop()\n        } else {\n            mani = JSON.parse(JSON.stringify(level.scene.cache.json.get('convo-manifest')))\n            mani = mani.files as string[]\n            convoIDD = shuffle(mani).pop()\n        }\n        convos.push(await createTweetConvo(level, obj_.x ?? 0, obj_.y ?? 0, charGroup, convoIDD))\n    }\n    return convos\n}\n"],"file":"addAllTweetConvosFromLayer.js"}