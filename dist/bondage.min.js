(()=>{var X=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var Xe=X(()=>{var It=function(){var t=function(se,Q,G,g){for(G=G||{},g=se.length;g--;G[se[g]]=Q);return G},e=[1,5],n=[1,11],a=[1,13],c=[1,14],d=[1,15],l=[5,8,21,23,25,31,65],J=[1,19],F=[1,20],H=[1,21],p=[1,35],r=[1,33],u=[1,30],h=[1,25],x=[1,26],f=[1,27],E=[1,28],N=[1,29],m=[1,31],T=[1,32],ae=[1,41],oe=[1,44],le=[1,45],ue=[1,46],he=[1,42],de=[1,43],ce=[1,47],O=[1,54],w=[1,55],y=[1,56],b=[1,57],j=[1,58],B=[1,59],M=[1,60],k=[1,61],S=[1,62],_=[1,63],q=[1,64],R=[1,65],C=[1,66],I=[11,28,49,50,51,52,53,54,55,56,57,58,59,60,61,66],qe=[11,26,35,41,42,43,44,45],K=[11,26,28,35,41,42,43,44,45,63],Re=[1,106],Ce=[28,63],Me=[11,28,49,50,53,54,55,56,57,58,59,60,61,66],te=[11,28,53,54,55,56,57,58,59,60,61,66],De=[1,129],Be=[1,130],Pe={trace:function(){},yy:{},symbols_:{error:2,node:3,statements:4,EndOfInput:5,conditionalStatement:6,statement:7,BeginCommand:8,If:9,expression:10,EndCommand:11,EndIf:12,additionalConditionalStatements:13,Else:14,ElseIf:15,shortcut:16,functionCall:17,jump:18,option:19,assignment:20,Text:21,inlineExpression:22,ShortcutOption:23,Indent:24,Dedent:25,Identifier:26,LeftParen:27,RightParen:28,parenArguments:29,openArguments:30,OptionStart:31,OptionEnd:32,OptionDelimit:33,Set:34,Variable:35,EqualToOrAssign:36,AddAssign:37,MinusAssign:38,MultiplyAssign:39,DivideAssign:40,True:41,False:42,Number:43,String:44,Null:45,UnaryMinus:46,"%prec":47,Not:48,Add:49,Minus:50,Multiply:51,Divide:52,Or:53,And:54,Xor:55,EqualTo:56,NotEqualTo:57,GreaterThan:58,GreaterThanOrEqualTo:59,LessThan:60,LessThanOrEqualTo:61,functionResultExpression:62,Comma:63,argument:64,BeginInlineExp:65,EndInlineExp:66,$accept:0,$end:1},terminals_:{2:"error",5:"EndOfInput",8:"BeginCommand",9:"If",11:"EndCommand",12:"EndIf",14:"Else",15:"ElseIf",21:"Text",23:"ShortcutOption",24:"Indent",25:"Dedent",26:"Identifier",27:"LeftParen",28:"RightParen",31:"OptionStart",32:"OptionEnd",33:"OptionDelimit",34:"Set",35:"Variable",36:"EqualToOrAssign",37:"AddAssign",38:"MinusAssign",39:"MultiplyAssign",40:"DivideAssign",41:"True",42:"False",43:"Number",44:"String",45:"Null",46:"UnaryMinus",47:"%prec",48:"Not",49:"Add",50:"Minus",51:"Multiply",52:"Divide",53:"Or",54:"And",55:"Xor",56:"EqualTo",57:"NotEqualTo",58:"GreaterThan",59:"GreaterThanOrEqualTo",60:"LessThan",61:"LessThanOrEqualTo",63:"Comma",65:"BeginInlineExp",66:"EndInlineExp"},productions_:[0,[3,2],[4,2],[4,2],[4,1],[4,1],[6,8],[6,6],[13,7],[13,8],[13,6],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[16,5],[16,9],[17,3],[17,5],[17,6],[17,4],[18,3],[19,5],[20,6],[20,6],[20,6],[20,6],[20,6],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,4],[10,4],[10,2],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,1],[62,4],[29,3],[29,1],[30,2],[30,1],[64,1],[64,1],[64,1],[64,1],[64,1],[64,1],[64,1],[22,3]],performAction:function(Q,G,g,o,P,s,pe){var i=s.length-1;switch(P){case 1:return JSON.stringify(s[i-1],null,"  "),s[i-1];break;case 2:case 3:case 58:this.$=s[i-1].concat([s[i]]);break;case 4:case 5:case 57:case 59:this.$=[s[i]];break;case 6:this.$=new o.IfNode(s[i-5],s[i-3]);break;case 7:this.$=new o.IfElseNode(s[i-3],s[i-1],s[i]);break;case 8:this.$=new o.ElseNode(s[i-3]);break;case 9:this.$=new o.ElseIfNode(s[i-5],s[i-3]);break;case 10:this.$=new o.ElseIfNode(s[i-3],s[i-1],s[i]);break;case 11:case 12:case 13:case 14:case 15:case 17:case 54:this.$=s[i];break;case 16:this.$=new o.TextNode(s[i],this._$);break;case 18:this.$=new o.DialogShortcutNode(s[i-3],s[i-1],this._$);break;case 19:this.$=new o.ConditionalDialogShortcutNode(s[i-7],s[i-1],s[i-4],this._$);break;case 20:this.$=new o.FunctionResultNode(s[i-1],[]);break;case 21:this.$=new o.FunctionResultNode(s[i-3],[]);break;case 22:this.$=new o.FunctionResultNode(s[i-4],s[i-2]);break;case 23:this.$=new o.FunctionResultNode(s[i-2],s[i-1]);break;case 24:this.$=new o.JumpNode(s[i-1],this._$);break;case 25:this.$=new o.OptionNode(s[i-3],s[i-1],this._$);break;case 26:this.$=new o.SetVariableEqualToNode(s[i-3].substring(1),s[i-1]);break;case 27:this.$=new o.SetVariableAddNode(s[i-3].substring(1),s[i-1]);break;case 28:this.$=new o.SetVariableMinusNode(s[i-3].substring(1),s[i-1]);break;case 29:this.$=new o.SetVariableMultipyNode(s[i-3].substring(1),s[i-1]);break;case 30:this.$=new o.SetVariableDivideNode(s[i-3].substring(1),s[i-1]);break;case 31:case 32:case 64:case 65:this.$=new o.BooleanLiteralNode(s[i]);break;case 33:case 61:this.$=new o.NumericLiteralNode(s[i]);break;case 34:case 62:this.$=new o.StringLiteralNode(s[i]);break;case 35:case 66:this.$=new o.NullLiteralNode(s[i]);break;case 36:case 63:this.$=new o.VariableNode(s[i].substring(1));break;case 37:this.$=new o.UnaryMinusExpressionNode(s[i-2]);break;case 38:this.$=new o.UnaryMinusExpressionNode(s[i-2].substring(1));break;case 39:this.$=new o.NegatedBooleanExpressionNode(s[i]);break;case 40:this.$=new o.ArithmeticExpressionNode(s[i-1]);break;case 41:this.$=new o.ArithmeticExpressionAddNode(s[i-2],s[i]);break;case 42:this.$=new o.ArithmeticExpressionMinusNode(s[i-2],s[i]);break;case 43:this.$=new o.ArithmeticExpressionMultiplyNode(s[i-2],s[i]);break;case 44:this.$=new o.ArithmeticExpressionDivideNode(s[i-2],s[i]);break;case 45:this.$=new o.BooleanOrExpressionNode(s[i-2],s[i]);break;case 46:this.$=new o.BooleanAndExpressionNode(s[i-2],s[i]);break;case 47:this.$=new o.BooleanXorExpressionNode(s[i-2],s[i]);break;case 48:this.$=new o.EqualToExpressionNode(s[i-2],s[i]);break;case 49:this.$=new o.NotEqualToExpressionNode(s[i-2],s[i]);break;case 50:this.$=new o.GreaterThanExpressionNode(s[i-2],s[i]);break;case 51:this.$=new o.GreaterThanOrEqualToExpressionNode(s[i-2],s[i]);break;case 52:this.$=new o.LessThanExpressionNode(s[i-2],s[i]);break;case 53:this.$=new o.LessThanOrEqualToExpressionNode(s[i-2],s[i]);break;case 55:this.$=new o.FunctionResultNode(s[i-3],s[i-1]);break;case 56:this.$=s[i-2].concat([s[i]]);break;case 60:this.$=new o.TextNode(s[i]);break;case 67:this.$=new o.InlineExpressionNode(s[i-1],this._$);break}},table:[{3:1,4:2,6:3,7:4,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},{1:[3]},{5:[1,16],6:17,7:18,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},t(l,[2,4]),t(l,[2,5]),{9:J,26:F,34:H},t(l,[2,11]),t(l,[2,12]),t(l,[2,13]),t(l,[2,14]),t(l,[2,15]),t(l,[2,16]),t(l,[2,17]),{21:[1,22]},{21:[1,23]},{10:24,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{1:[2,1]},t(l,[2,2]),t(l,[2,3]),{10:36,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{11:[1,37],26:ae,27:[1,38],30:39,35:oe,41:le,42:ue,43:he,44:de,45:ce,64:40},{35:[1,48]},{8:[1,50],24:[1,49]},{32:[1,51],33:[1,52]},{49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C,66:[1,53]},t(I,[2,31]),t(I,[2,32]),t(I,[2,33]),t(I,[2,34]),t(I,[2,35]),t(I,[2,36]),{35:[1,68],43:[1,67]},{10:69,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:70,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},t(I,[2,54]),{27:[1,71]},{11:[1,72],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},t(l,[2,20]),{26:ae,28:[1,73],29:74,35:oe,41:le,42:ue,43:he,44:de,45:ce,64:75},{11:[1,76],26:ae,35:oe,41:le,42:ue,43:he,44:de,45:ce,64:77},t(qe,[2,59]),t(K,[2,60]),t(K,[2,61]),t(K,[2,62]),t(K,[2,63]),t(K,[2,64]),t(K,[2,65]),t(K,[2,66]),{36:[1,78],37:[1,79],38:[1,80],39:[1,81],40:[1,82]},{4:83,6:3,7:4,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},{9:[1,84]},t(l,[2,24]),{26:[1,85]},t(l,[2,67]),{10:86,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:87,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:88,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:89,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:90,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:91,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:92,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:93,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:94,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:95,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:96,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:97,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:98,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{47:[1,99]},{47:[1,100]},t(I,[2,39]),{28:[1,101],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},{26:ae,29:102,35:oe,41:le,42:ue,43:he,44:de,45:ce,64:75},{4:103,6:3,7:4,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},{11:[1,104]},{28:[1,105],63:Re},t(Ce,[2,57]),t(l,[2,23]),t(qe,[2,58]),{10:107,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:108,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:109,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:110,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{10:111,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{6:17,7:18,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,25:[1,112],31:c,65:d},{10:113,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{32:[1,114]},t(Me,[2,41],{51:y,52:b}),t(Me,[2,42],{51:y,52:b}),t(I,[2,43]),t(I,[2,44]),t([11,28,53,66],[2,45],{49:O,50:w,51:y,52:b,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C}),t([11,28,53,54,66],[2,46],{49:O,50:w,51:y,52:b,55:M,56:k,57:S,58:_,59:q,60:R,61:C}),t([11,28,53,54,55,66],[2,47],{49:O,50:w,51:y,52:b,56:k,57:S,58:_,59:q,60:R,61:C}),t(te,[2,48],{49:O,50:w,51:y,52:b}),t(te,[2,49],{49:O,50:w,51:y,52:b}),t(te,[2,50],{49:O,50:w,51:y,52:b}),t(te,[2,51],{49:O,50:w,51:y,52:b}),t(te,[2,52],{49:O,50:w,51:y,52:b}),t(te,[2,53],{49:O,50:w,51:y,52:b}),{46:[1,115]},{46:[1,116]},t(I,[2,40]),{28:[1,117],63:Re},{6:17,7:18,8:[1,118],13:119,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},t(l,[2,21]),{11:[1,120]},{26:ae,35:oe,41:le,42:ue,43:he,44:de,45:ce,64:121},{11:[1,122],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},{11:[1,123],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},{11:[1,124],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},{11:[1,125],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},{11:[1,126],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},t(l,[2,18]),{11:[1,127],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},t(l,[2,25]),t(I,[2,37]),t(I,[2,38]),t(I,[2,55]),{9:J,12:[1,128],14:De,15:Be,26:F,34:H},t(l,[2,7]),t(l,[2,22]),t(Ce,[2,56]),t(l,[2,26]),t(l,[2,27]),t(l,[2,28]),t(l,[2,29]),t(l,[2,30]),{24:[1,131]},{11:[1,132]},{11:[1,133]},{10:134,26:p,27:r,35:u,41:h,42:x,43:f,44:E,45:N,46:m,48:T,62:34},{4:135,6:3,7:4,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},t(l,[2,6]),{4:136,6:3,7:4,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},{11:[1,137],49:O,50:w,51:y,52:b,53:j,54:B,55:M,56:k,57:S,58:_,59:q,60:R,61:C},{6:17,7:18,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,25:[1,138],31:c,65:d},{6:17,7:18,8:[1,139],16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},{4:140,6:3,7:4,8:e,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},t(l,[2,19]),{9:J,12:[1,141],26:F,34:H},{6:17,7:18,8:[1,142],13:143,16:6,17:7,18:8,19:9,20:10,21:n,22:12,23:a,31:c,65:d},{11:[1,144]},{9:J,12:[1,145],14:De,15:Be,26:F,34:H},t(l,[2,10]),t(l,[2,8]),{11:[1,146]},t(l,[2,9])],defaultActions:{16:[2,1]},parseError:function(Q,G){if(G.recoverable)this.trace(Q);else{var g=new Error(Q);throw g.hash=G,g}},parse:function(Q){var G=this,g=[0],o=[],P=[null],s=[],pe=this.table,i="",Ee=0,Fe=0,je=0,xt=2,Ge=1,ft=s.slice.call(arguments,1),L=Object.create(this.lexer),Y={yy:{}};for(var ye in this.yy)Object.prototype.hasOwnProperty.call(this.yy,ye)&&(Y.yy[ye]=this.yy[ye]);L.setInput(Q,Y.yy),Y.yy.lexer=L,Y.yy.parser=this,typeof L.yylloc=="undefined"&&(L.yylloc={});var be=L.yylloc;s.push(be);var Et=L.options&&L.options.ranges;typeof Y.yy.parseError=="function"?this.parseError=Y.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function Lt(U){g.length=g.length-2*U,P.length=P.length-U,s.length=s.length-U}e:var Nt=function(){var U;return U=L.lex()||Ge,typeof U!="number"&&(U=G.symbols_[U]||U),U};for(var V,Oe,$,D,At,we,ie={},Ne,W,Ue,me;;){if($=g[g.length-1],this.defaultActions[$]?D=this.defaultActions[$]:((V===null||typeof V=="undefined")&&(V=Nt()),D=pe[$]&&pe[$][V]),typeof D=="undefined"||!D.length||!D[0]){var ve="";me=[];for(Ne in pe[$])this.terminals_[Ne]&&Ne>xt&&me.push("'"+this.terminals_[Ne]+"'");L.showPosition?ve="Parse error on line "+(Ee+1)+`:
`+L.showPosition()+`
Expecting `+me.join(", ")+", got '"+(this.terminals_[V]||V)+"'":ve="Parse error on line "+(Ee+1)+": Unexpected "+(V==Ge?"end of input":"'"+(this.terminals_[V]||V)+"'"),this.parseError(ve,{text:L.match,token:this.terminals_[V]||V,line:L.yylineno,loc:be,expected:me})}if(D[0]instanceof Array&&D.length>1)throw new Error("Parse Error: multiple actions possible at state: "+$+", token: "+V);switch(D[0]){case 1:g.push(V),P.push(L.yytext),s.push(L.yylloc),g.push(D[1]),V=null,Oe?(V=Oe,Oe=null):(Fe=L.yyleng,i=L.yytext,Ee=L.yylineno,be=L.yylloc,je>0&&je--);break;case 2:if(W=this.productions_[D[1]][1],ie.$=P[P.length-W],ie._$={first_line:s[s.length-(W||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(W||1)].first_column,last_column:s[s.length-1].last_column},Et&&(ie._$.range=[s[s.length-(W||1)].range[0],s[s.length-1].range[1]]),we=this.performAction.apply(ie,[i,Fe,Ee,Y.yy,D[1],P,s].concat(ft)),typeof we!="undefined")return we;W&&(g=g.slice(0,-1*W*2),P=P.slice(0,-1*W),s=s.slice(0,-1*W)),g.push(this.productions_[D[1]][0]),P.push(ie.$),s.push(ie._$),Ue=pe[g[g.length-2]][g[g.length-1]],g.push(Ue);break;case 3:return!0}}return!0}};function ge(){this.yy={}}return ge.prototype=Pe,Pe.Parser=ge,new ge}()});var Je=X((_t,ze)=>{"use strict";var mt={Whitespace:null,Indent:null,Dedent:null,EndOfLine:null,EndOfInput:null,UnaryMinus:null,Number:/-?[0-9]+(\.[0-9+])?/,String:/"([^"\\]*(?:\\.[^"\\]*)*)"/,BeginCommand:/<</,EndCommand:/>>/,Variable:/\$([A-Za-z0-9_.])+/,ShortcutOption:/->/,OptionStart:/\[\[/,OptionDelimit:/\|/,OptionEnd:/\]\]/,If:/if(?!\w)/,ElseIf:/elseif(?!\w)/,Else:/else(?!\w)/,EndIf:/endif(?!\w)/,Set:/set(?!\w)/,True:/true(?!\w)/,False:/false(?!\w)/,Null:/null(?!\w)/,LeftParen:/\(/,RightParen:/\)/,Comma:/,/,EqualTo:/(==|is(?!\w)|eq(?!\w))/,GreaterThan:/(>|gt(?!\w))/,GreaterThanOrEqualTo:/(>=|gte(?!\w))/,LessThan:/(<|lt(?!\w))/,LessThanOrEqualTo:/(<=|lte(?!\w))/,NotEqualTo:/(!=|neq(?!\w))/,Or:/(\|\||or(?!\w))/,And:/(&&|and(?!\w))/,Xor:/(\^|xor(?!\w))/,Not:/(!|not(?!\w))/,EqualToOrAssign:/(=|to(?!\w))/,Add:/\+/,Minus:/-/,Multiply:/\*/,Divide:/\//,AddAssign:/\+=/,MinusAssign:/-=/,MultiplyAssign:/\*=/,DivideAssign:/\/=/,Comment:"//",Identifier:/[a-zA-Z0-9_:.]+/,CommandCall:/([^>]|(?!>)[^>]+>)+(?=>>)/,Text:/.*/,BeginInlineExp:/\{/,EndInlineExp:/\}/};ze.exports=mt});var He=X((qt,We)=>{"use strict";var Tt=Je(),Ze=class{constructor(){this.transitions=[],this.textRule=null,this.isTrackingNextIndentation=!1}addTransition(e,n,a){return this.transitions.push({token:e,regex:Tt[e],state:n||null,delimitsText:a||!1}),this}addTextRule(e,n){if(this.textRule)throw new Error("Cannot add more than one text rule to a state.");let a=[];this.transitions.forEach(d=>{d.delimitsText&&a.push(`(${d.regex.source})`)});let c=`((?!${a.join("|")}).)*`;return this.addTransition(e,n),this.textRule=this.transitions[this.transitions.length-1],this.textRule.regex=new RegExp(c),this}setTrackNextIndentation(e){return this.isTrackingNextIndentation=e,this}};We.exports=Ze});var Qe=X((Rt,Ke)=>{"use strict";var Z=He();function gt(){return{base:new Z().addTransition("BeginCommand","command",!0).addTransition("OptionStart","option",!0).addTransition("BeginInlineExp","inlineExpression",!0).addTransition("ShortcutOption","shortcutOption").addTextRule("Text"),shortcutOption:new Z().setTrackNextIndentation(!0).addTransition("BeginCommand","expression",!0).addTextRule("Text","base"),command:new Z().addTransition("If","expression").addTransition("Else").addTransition("ElseIf","expression").addTransition("EndIf").addTransition("Set","assignment").addTransition("EndCommand","base",!0).addTransition("Identifier","commandOrExpression",!0).addTextRule("Text"),commandOrExpression:new Z().addTransition("EndCommand","base",!0).addTransition("LeftParen").addTransition("Variable").addTransition("Number").addTransition("String").addTransition("True").addTransition("False").addTransition("Identifier").addTransition("Comma").addTransition("RightParen"),assignment:new Z().addTransition("Variable").addTransition("EqualToOrAssign","expression").addTransition("AddAssign","expression").addTransition("MinusAssign","expression").addTransition("MultiplyAssign","expression").addTransition("DivideAssign","expression"),expression:new Z().addTransition("EndCommand","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("Minus").addTransition("Multiply").addTransition("Divide").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule(),option:new Z().addTransition("OptionEnd","base",!0).addTransition("OptionDelimit","optionDestination",!0).addTextRule("Text"),optionDestination:new Z().addTransition("Identifier").addTransition("OptionEnd","base"),inlineExpression:new Z().addTransition("EndInlineExp","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("Variable").addTransition("Add").addTransition("Minus").addTransition("Multiply").addTransition("Divide").addTextRule("Text","base")}}Ke.exports={makeStates:gt}});var et=X((Ct,Ye)=>{"use strict";var yt=Qe(),$e=class{constructor(){this.states=yt.makeStates(),this.state="base",this.originalText="",this.lines=[],this.indentation=[[0,!1]],this.shouldTrackNextIndentation=!1,this.previousLevelOfIndentation=0,this.reset()}reset(){this.yytext="",this.yylloc={first_column:1,first_line:1,last_column:1,last_line:1},this.yylineno=1}lex(){if(this.isAtTheEndOfText()){this.yytext="";let e=this.indentation.pop();return e&&e[1]?"Dedent":"EndOfInput"}if(this.isAtTheEndOfLine()){if(!this.isAtTheEndOfText())return this.lexNextLine()}else return this.lexNextTokenOnCurrentLine();return"Invalid"}lexNextTokenOnCurrentLine(){let e=this.getCurrentLineIndentation();if(this.shouldTrackNextIndentation&&e>this.previousLevelOfIndentation)return this.indentation.push([e,!0]),this.shouldTrackNextIndentation=!1,this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=e,this.yytext="","Indent";if(e<this.getLastRecordedIndentation()[0]){if(this.indentation.pop()[1])return this.yytext="",this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],"Dedent";this.lexNextTokenOnCurrentLine()}if(e===this.previousLevelOfIndentation&&this.yylloc.last_column===1&&(this.yylloc.last_column+=e),this.getCurrentLine().substring(this.yylloc.last_column-1).startsWith("//"))return this.lexNextLine();for(let n of this.getState().transitions){let a=this.getCurrentLine().substring(this.yylloc.last_column-1).match(n.regex);if(a===null||a.index!==0)continue;let c=a[0];this.yytext=this.getCurrentLine().substr(this.yylloc.last_column-1,c.length),n.token==="String"&&(this.yytext=this.yytext.substring(1,this.yytext.length-1).replace(/\\/g,"")),this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=c.length,n.state&&(this.setState(n.state),this.shouldTrackNextIndentation&&this.getLastRecordedIndentation()[0]<e&&this.indentation.push([e,!1]));let d=this.getCurrentLine().substring(this.yylloc.last_column-1).match(/^\s*/);return d.length!==0&&(d[0].length==2?this.yylloc.last_column+=1:this.yylloc.last_column+=d[0].length),n.token}return"Invalid"}lexNextLine(){this.yylineno+=1;let e=this.getCurrentLine().replace(/\t/,"    ");return this.lines[this.yylineno-1]=e,this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],this.yytext="",this.yylloc={first_column:1,first_line:this.yylineno,last_column:1,last_line:this.yylineno},this.lex()}setState(e){if(this.states[e]===void 0)throw new Error(`Cannot set the unknown state [${e}]`);this.state=e,this.getState().isTrackingNextIndentation&&(this.shouldTrackNextIndentation=!0)}setInput(e){this.originalText=e.replace(/(\r\n)/g,`
`).replace(/\r/g,`
`).replace(/[\n\r]+$/,""),this.lines=this.originalText.split(`
`),this.reset()}getState(){return this.states[this.state]}getCurrentLine(){return this.lines[this.yylineno-1]}setCurrentLine(e){this.lines[this.yylineno-1]=e}getCurrentLineIndentation(){let e=this.getCurrentLine().match(/^(\s*)/g);return e===null&&e[0]===null?0:e[0].length}getLastRecordedIndentation(){return this.indentation.length===0?[0,!1]:this.indentation[this.indentation.length-1]}isAtTheEndOfText(){return this.isAtTheEndOfLine()&&this.yylloc.first_line>=this.lines.length}isAtTheEndOfLine(){return this.yylloc.last_column>this.getCurrentLine().length}};Ye.exports=$e});var _e=X((Mt,tt)=>{"use strict";var Le=class{},Te=class{},Ae=class{},Ve=class{},ne=class{},ee=class{},re=class{},v=class{},Ie=class{},ke=class{},Se=class{};tt.exports={types:{Text:Le,Shortcut:Te,Jump:Ae,Option:Ve,Conditional:ne,Assignment:ee,Literal:re,Expression:v,Command:ke,FunctionCall:Ie,InlineExpression:Se},RootNode:class{constructor(t){this.name="RootNode",this.dialogNodes=t||[]}},DialogNode:class{constructor(t,e){this.type="DialogNode",this.name=e||null,this.content=t}},DialogShortcutNode:class extends Te{constructor(t,e,n){super();this.type="DialogShortcutNode",this.text=t,this.content=e,this.lineNum=n?n.first_line:-1}},ConditionalDialogShortcutNode:class extends Te{constructor(t,e,n,a){super();this.type="ConditionalDialogShortcutNode",this.text=t,this.content=e,this.conditionalExpression=n,this.lineNum=a?a.first_line:-1}},IfNode:class extends ne{constructor(t,e){super();this.type="IfNode",this.expression=t,this.statement=e}},IfElseNode:class extends ne{constructor(t,e,n){super();this.type="IfElseNode",this.expression=t,this.statement=e,this.elseStatement=n}},ElseNode:class extends ne{constructor(t){super();this.type="ElseNode",this.statement=t}},ElseIfNode:class extends ne{constructor(t,e,n){super();this.type="ElseIfNode",this.expression=t,this.statement=e,this.elseStatement=n}},TextNode:class extends Le{constructor(t,e){super();this.type="TextNode",this.text=t,this.lineNum=e?e.first_line:-1}},JumpNode:class extends Ae{constructor(t,e){super();this.type="JumpNode",this.identifier=t,this.lineNum=e?e.first_line:-1,this.selectable=!0}},OptionNode:class extends Ve{constructor(t,e,n){super();this.type="OptionNode",this.text=t||null,this.identifier=e||this.text,this.lineNum=n?n.first_line:-1,this.selectable=!0}},NumericLiteralNode:class extends re{constructor(t){super();this.type="NumericLiteralNode",this.numericLiteral=t}},StringLiteralNode:class extends re{constructor(t){super();this.type="StringLiteralNode",this.stringLiteral=t}},BooleanLiteralNode:class extends re{constructor(t){super();this.type="BooleanLiteralNode",this.booleanLiteral=t}},VariableNode:class extends re{constructor(t){super();this.type="VariableNode",this.variableName=t}},UnaryMinusExpressionNode:class extends v{constructor(t){super();this.type="UnaryMinusExpressionNode",this.expression=t}},ArithmeticExpressionNode:class extends v{constructor(t){super();this.type="ArithmeticExpressionNode",this.expression=t}},ArithmeticExpressionAddNode:class extends v{constructor(t,e){super();this.type="ArithmeticExpressionAddNode",this.expression1=t,this.expression2=e}},ArithmeticExpressionMinusNode:class extends v{constructor(t,e){super();this.type="ArithmeticExpressionMinusNode",this.expression1=t,this.expression2=e}},ArithmeticExpressionMultiplyNode:class extends v{constructor(t,e){super();this.type="ArithmeticExpressionMultiplyNode",this.expression1=t,this.expression2=e}},ArithmeticExpressionDivideNode:class extends v{constructor(t,e){super();this.type="ArithmeticExpressionDivideNode",this.expression1=t,this.expression2=e}},BooleanExpressionNode:class extends v{constructor(t){super();this.type="BooleanExpressionNode",this.booleanExpression=t}},NegatedBooleanExpressionNode:class extends v{constructor(t){super();this.type="NegatedBooleanExpressionNode",this.booleanExpression=t}},BooleanOrExpressionNode:class extends v{constructor(t,e){super();this.type="BooleanOrExpressionNode",this.expression1=t,this.expression2=e}},BooleanAndExpressionNode:class extends v{constructor(t,e){super();this.type="BooleanAndExpressionNode",this.expression1=t,this.expression2=e}},BooleanXorExpressionNode:class extends v{constructor(t,e){super();this.type="BooleanXorExpressionNode",this.expression1=t,this.expression2=e}},EqualToExpressionNode:class extends v{constructor(t,e){super();this.type="EqualToExpressionNode",this.expression1=t,this.expression2=e}},NotEqualToExpressionNode:class extends v{constructor(t,e){super();this.type="EqualToExpressionNode",this.expression1=t,this.expression2=e}},GreaterThanExpressionNode:class extends v{constructor(t,e){super();this.type="GreaterThanExpressionNode",this.expression1=t,this.expression2=e}},GreaterThanOrEqualToExpressionNode:class extends v{constructor(t,e){super();this.type="GreaterThanOrEqualToExpressionNode",this.expression1=t,this.expression2=e}},LessThanExpressionNode:class extends v{constructor(t,e){super();this.type="LessThanExpressionNode",this.expression1=t,this.expression2=e}},LessThanOrEqualToExpressionNode:class extends v{constructor(t,e){super();this.type="LessThanOrEqualToExpressionNode",this.expression1=t,this.expression2=e}},SetVariableEqualToNode:class extends ee{constructor(t,e){super();this.type="SetVariableEqualToNode",this.variableName=t,this.expression=e}},SetVariableAddNode:class extends ee{constructor(t,e){super();this.type="SetVariableAddNode",this.variableName=t,this.expression=e}},SetVariableMinusNode:class extends ee{constructor(t,e){super();this.type="SetVariableMinusNode",this.variableName=t,this.expression=e}},SetVariableMultipyNode:class extends ee{constructor(t,e){super();this.type="SetVariableMultipyNode",this.variableName=t,this.expression=e}},SetVariableDivideNode:class extends ee{constructor(t,e){super();this.type="SetVariableDivideNode",this.variableName=t,this.expression=e}},FunctionResultNode:class extends Ie{constructor(t,e){super();this.type="FunctionResultNode",this.functionName=t,this.args=e,this.lineNum=-1}},CommandNode:class extends ke{constructor(t,e){super();this.type="CommandNode",this.command=t,this.lineNum=e?e.first_line:-1}},InlineExpressionNode:class extends Se{constructor(t,e){super();this.type="InlineExpressionNode",this.expression=t,this.lineNum=e?e.first_line:-1}}}});var at=X((Dt,st)=>{"use strict";var xe=class{},it=class extends xe{constructor(e,n,a){super();this.text=e,this.data=n,this.lineNum=a}},nt=class extends xe{constructor(e,n,a){super();this.name=e,this.args=n,this.result=a}},rt=class extends xe{constructor(e,n){super();this.options=e,this.lineNum=n,this.selected=-1}select(e){if(e<0||e>=this.options.length)throw new Error(`Cannot select option #${e}, there are only ${this.options.length} options`);this.selected=e}};st.exports={Result:xe,TextResult:it,CommandResult:nt,OptionsResult:rt}});var ut=X((Bt,ot)=>{"use strict";var lt=class{constructor(){this.data={}}set(e,n){this.data[e]=n}get(e){return this.data[e]}};ot.exports=lt});var ct=X((Pt,ht)=>{"use strict";var fe;console.log("browser"),fe=Xe().parser;console.log(fe);var bt=et(),Ot=_e();fe.lexer=new bt;fe.yy=Ot;var z=at(),wt=ut(),A=_e().types,dt=class{constructor(){var e=this;this.yarnNodes={},this.variables=new wt,this.functions={},this.visited={},this.registerFunction("visited",n=>!!this.visited[n[0]])}load(e){for(let n of e)this.yarnNodes[n.title]={title:n.title,tags:n.tags,body:n.body}}setVariableStorage(e){if(typeof e.set!="function"||typeof e.get!="function")throw new Error('Variable Storage object must contain both a "set" and "get" function');this.variables=e}registerFunction(e,n){if(typeof n!="function")throw new Error("Registered function must be...well...a function");this.functions[e]=n}*run(e){let n=this.yarnNodes[e];if(n===void 0)throw new Error(`Node "${e}" does not exist`);this.visited[e]=!0;let a=Array.from(fe.parse(n.body)),c={title:n.title,tags:n.tags.split(" "),body:n.body};yield*this.evalNodes(a,c)}*evalNodes(e,n){if(!e)return;let a=[],c=[],d=null,l=null;for(var J=0;J<e.length;J++){let r=e[J],u=e[J+1];if(d instanceof A.Shortcut&&!(r instanceof A.Shortcut)&&(yield*this.handleShortcuts(c,n),c=[]),r instanceof A.Jump){yield*this.run(r.identifier);return}else if(r instanceof A.Option)a.push(r);else if(r instanceof A.Text)l?(l.text+=r.text,(u==null||!(u instanceof A.InlineExpression)||r.lineNum!==u.lineNum)&&(yield l,l=null)):u&&u instanceof A.InlineExpression&&r.lineNum===u.lineNum?l=new z.TextResult(r.text,n,r.lineNum):yield new z.TextResult(r.text,n,r.lineNum);else if(r instanceof A.InlineExpression){let h=this.evaluateExpressionOrLiteral(r.expression).toString();l?(l.text+=h,(u==null||!(u instanceof A.Text)||r.lineNum!==u.lineNum)&&(yield l,l=null)):u&&u instanceof A.Text&&r.lineNum===u.lineNum?l=new z.TextResult(h,n,r.lineNum):yield new z.TextResult(h,n,r.lineNum)}else if(r instanceof A.Shortcut)c.push(r);else if(r instanceof A.Assignment)this.evaluateAssignment(r);else if(r instanceof A.Conditional){let h=this.evaluateConditional(r);if(h){h=h;let x=[];for(var F=0;F<h.length;F++)h[F]instanceof A.Option?a.push(h[F]):x.push(h[F]);yield*this.evalNodes(x,n)}}else if(r instanceof A.FunctionCall){if(r.functionName==="stop")return;var H=null,p=r.args?r.args.map(this.evaluateExpressionOrLiteral,this):[];this.functions[r.functionName]&&(H=this.functions[r.functionName](p)),yield new z.CommandResult(r.functionName,p,H)}d=r}c.length>0&&(yield*this.handleShortcuts(c,n)),a.length>0&&(yield*this.handleOptions(a))}*handleOptions(e){let n=new z.OptionsResult(e.map(a=>a.text),e.map(a=>a.lineNum||-1));if(yield n,n.selected!==-1){let a=e[n.selected];yield*this.run(a.identifier)}}*handleShortcuts(e,n){let a=e.filter(d=>d.type==="ConditionalDialogShortcutNode"?this.evaluateExpressionOrLiteral(d.conditionalExpression):!0);if(a.length===0)return;let c=new z.OptionsResult(a.map(d=>d.text),a.map(d=>d.lineNum||-1));if(yield c,c.selected!==-1){let d=a[c.selected];d.content&&(yield*this.evalNodes(d.content,n))}}evaluateAssignment(e){let n=this.evaluateExpressionOrLiteral(e.expression),a=this.variables.get(e.variableName);if(e.type==="SetVariableAddNode")n+=a;else if(e.type==="SetVariableMinusNode")n-=a;else if(e.type==="SetVariableMultiplyNode")n*=a;else if(e.type==="SetVariableDivideNode")n/=a;else if(e.type!=="SetVariableEqualToNode")throw new Error(`I don't recognize assignment type ${e.type}`);this.variables.set(e.variableName,n)}evaluateConditional(e){if(e.type==="IfNode"){if(this.evaluateExpressionOrLiteral(e.expression))return e.statement}else if(e.type==="IfElseNode"||e.type==="ElseIfNode"){if(this.evaluateExpressionOrLiteral(e.expression))return e.statement;if(e.elseStatement)return this.evaluateConditional(e.elseStatement)}else if(e.type==="ElseNode")return e.statement;return null}evaluateExpressionOrLiteral(e){if(e instanceof A.Expression){if(e.type==="UnaryMinusExpressionNode")return-1*this.evaluateExpressionOrLiteral(e.expression);if(e.type==="ArithmeticExpressionNode")return this.evaluateExpressionOrLiteral(e.expression);if(e.type==="ArithmeticExpressionAddNode")return this.evaluateExpressionOrLiteral(e.expression1)+this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="ArithmeticExpressionMinusNode")return this.evaluateExpressionOrLiteral(e.expression1)-this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="ArithmeticExpressionMultiplyNode")return this.evaluateExpressionOrLiteral(e.expression1)*this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="ArithmeticExpressionDivideNode")return this.evaluateExpressionOrLiteral(e.expression1)/this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="BooleanExpressionNode")return this.evaluateExpressionOrLiteral(e.booleanExpression);if(e.type==="NegatedBooleanExpressionNode")return!this.evaluateExpressionOrLiteral(e.booleanExpression);if(e.type==="BooleanOrExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)||this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="BooleanAndExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)&&this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="BooleanXorExpressionNode")return!this.evaluateExpressionOrLiteral(e.expression1)!=!this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="EqualToExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)===this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="NotEqualToExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)!==this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="GreaterThanExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)>this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="GreaterThanOrEqualToExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)>=this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="LessThanExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)<this.evaluateExpressionOrLiteral(e.expression2);if(e.type==="LessThenOrEqualToExpressionNode")return this.evaluateExpressionOrLiteral(e.expression1)<=this.evaluateExpressionOrLiteral(e.expression2);throw new Error(`I don't recognize expression type ${e.type}`)}else{if(e instanceof A.Text)return e.text;if(e instanceof A.Literal){if(e.type==="NumericLiteralNode")return parseFloat(e.numericLiteral);if(e.type==="StringLiteralNode")return e.stringLiteral;if(e.type==="BooleanLiteralNode")return e.booleanLiteral==="true";if(e.type==="VariableNode")return this.variables.get(e.variableName);throw new Error(`I don't recognize literal type ${e.type}`)}else if(e.type==="FunctionResultNode"){if(this.functions[e.functionName])return this.functions[e.functionName](e.args.map(this.evaluateExpressionOrLiteral,this));throw new Error(`Function "${e.functionName}" not found`)}else throw new Error(`I don't recognize expression/literal type ${e.type}`)}}};ht.exports={Runner:dt,TextResult:z.TextResult,CommandResult:z.CommandResult,OptionsResult:z.OptionsResult}});var vt=X((Ft,pt)=>{"use strict";pt.exports=ct()});vt();})();
