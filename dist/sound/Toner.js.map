{"version":3,"sources":["../../src/sound/Toner.ts"],"names":["Toner","context","Tone","setContext","instruments","Map","set","SynthBeep","Gong","Walk","Talking","start","Transport","config","found","get","inst","state","play"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;IAEqBA,K;AAGjB,iBAAYC,OAAZ,EAAmC;AAAA;AAC/B,SAAKA,OAAL,GAAeA,OAAf;AACAC,IAAAA,IAAI,CAACC,UAAL,CAAgB,KAAKF,OAArB;AACA,SAAKG,WAAL,GAAmB,IAAIC,GAAJ,EAAnB;AACA,SAAKD,WAAL,CAAiBE,GAAjB,CAAqB,KAArB,EAA4B,IAAIC,kBAAJ,EAA5B;AACA,SAAKH,WAAL,CAAiBE,GAAjB,CAAqB,MAArB,EAA6B,IAAIE,aAAJ,EAA7B;AACA,SAAKJ,WAAL,CAAiBE,GAAjB,CAAqB,MAArB,EAA6B,IAAIG,aAAJ,EAA7B;AACAP,IAAAA,IAAI,CAACC,UAAL,CAAgB,KAAKF,OAArB;AACA,SAAKG,WAAL,CAAiBE,GAAjB,CAAqB,SAArB,EAAgC,IAAII,gBAAJ,EAAhC;AACAR,IAAAA,IAAI,CAACC,UAAL,CAAgB,KAAKF,OAArB;AACAC,IAAAA,IAAI,CAACS,KAAL;AACAT,IAAAA,IAAI,CAACU,SAAL,CAAeD,KAAf;AACH;;;;WACD,cAAKE,MAAL,EAA+B;AAC3B,UAAMC,KAAK,GAAG,KAAKV,WAAL,CAAiBW,GAAjB,CAAqBF,MAAM,CAACG,IAA5B,CAAd;AACA,UAAIF,KAAK,IAAI,KAAKb,OAAL,CAAagB,KAAb,KAAuB,SAApC,EAA+CH,KAAK,CAACI,IAAN,CAAWL,MAAX;AAClD","sourcesContent":["import * as Tone from 'tone'\nimport { IToner, ITonerPlayConfig } from './IToner';\nimport { ITonerSynth } from \"./ITonerSynth\";\nimport Gong from \"./synths/Gong\";\nimport SynthBeep from \"./synths/SynthBeep\";\nimport { Talking } from \"./synths/Talking\";\nimport Walk from \"./synths/Walk\";\n\nexport default class Toner implements IToner {\n    instruments: Map<string, ITonerSynth>\n    context: AudioContext\n    constructor(context: AudioContext) {\n        this.context = context\n        Tone.setContext(this.context)\n        this.instruments = new Map()\n        this.instruments.set('arp', new SynthBeep())\n        this.instruments.set('gong', new Gong())\n        this.instruments.set('walk', new Walk())\n        Tone.setContext(this.context)\n        this.instruments.set('talking', new Talking())\n        Tone.setContext(this.context)\n        Tone.start()\n        Tone.Transport.start()\n    }\n    play(config: ITonerPlayConfig) {\n        const found = this.instruments.get(config.inst)\n        if (found && this.context.state === 'running') found.play(config)\n    }\n}\n"],"file":"Toner.js"}