{"version":3,"sources":["../../../src/sound/synths/Walk.ts"],"names":["synth","Tone","Player","toDestination","Offline","transport","pluck","PluckSynth","resonance","volume","tnow","currentTime","triggerAttack","then","buff","ready","buffer","start"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;AASI,sBAAc;AAAA;;AAAA;AAAA,8CAND,MAMC;AAAA,kDAHG,IAGH;AAAA,iDAFG,KAEH;AACV,SAAKA,KAAL,GAAa,IAAIC,IAAI,CAACC,MAAT,GAAkBC,aAAlB,EAAb;AACAF,IAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,SAAD,EAAe;AACxB,UAAMC,KAAK,GAAG,IAAIL,IAAI,CAACM,UAAT,CAAoB;AAAEC,QAAAA,SAAS,EAAE,GAAb;AAAkBC,QAAAA,MAAM,EAAE,CAAC;AAA3B,OAApB,EAAqDN,aAArD,EAAd;AACA,UAAMO,IAAI,GAAGL,SAAS,CAACM,WAAvB;AACAL,MAAAA,KAAK,CAACM,aAAN,CAAoB,IAApB,EAA0BF,IAA1B;AACAJ,MAAAA,KAAK,CAACM,aAAN,CAAoB,IAApB,EAA0BF,IAAI,GAAI,QAAQ,CAA1C;AACH,KALD,EAKG,IALH,EAKSG,IALT,CAKc,UAAAC,IAAI,EAAI;AAClB,MAAA,KAAI,CAACC,KAAL,GAAa,IAAb;AACA,MAAA,KAAI,CAACf,KAAL,CAAWgB,MAAX,GAAoBF,IAApB;AACH,KARD;AASH;;;;WAED,gBAAO;AACH,UAAI,KAAKC,KAAT,EAAgB;AACZ;AACA,aAAKf,KAAL,CAAWiB,KAAX;AACH;AACJ;;;WAED,qBAAY,CAAG","sourcesContent":["import * as Tone from 'tone'\nimport { ITonerSynth } from '../ITonerSynth';\nexport default class implements ITonerSynth {\n    id: string = 'walk'\n    synth: Tone.Player\n    buff: Tone.ToneAudioBuffer | undefined\n    volume: number = 0.75\n    ready: boolean = false\n\n    constructor() {\n        this.synth = new Tone.Player().toDestination()\n        Tone.Offline((transport) => {\n            const pluck = new Tone.PluckSynth({ resonance: 0.1, volume: -18 }).toDestination();\n            const tnow = transport.currentTime\n            pluck.triggerAttack(\"A3\", tnow);\n            pluck.triggerAttack(\"G3\", tnow + (0.125 / 4));\n        }, 0.25).then(buff => {\n            this.ready = true\n            this.synth.buffer = buff\n        })\n    }\n\n    play() {\n        if (this.ready) {\n            // this.synth.stop()\n            this.synth.start();\n        }\n    }\n\n    setVolume() { }\n\n}\n"],"file":"Walk.js"}