{"version":3,"sources":["../../../src/sound/synths/SynthBeep.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAII;AAEA;AACA,sBAAc,CACV;AACA;AACA;AACA;AACA;AACA;;AANU;AAAA,8CAJD,KAIC;AAAA,kDAFG,IAEH;AAOb;;;;WACD,gBAAO,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;WACD,qBAAY,CAAG","sourcesContent":["import * as Tone from 'tone'\nimport { ITonerSynth } from '../ITonerSynth';\nexport default class implements ITonerSynth {\n    id: string = 'Arp'\n    // synth: Tone.PolySynth\n    volume: number = 0.75\n    // seq: Tone.Sequence\n    constructor() {\n        // this.synth = new Tone.PolySynth().toDestination();\n        // this.seq = new Tone.Sequence((time, note) => {\n        //     this.synth.triggerAttackRelease(note, 0.1, time);\n        //     // subdivisions are given as subarrays\n        // }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]])\n        // Tone.Transport.start()\n    }\n    play() {\n        // console.log(this.synth)\n        // console.log(Tone.Transport.state)\n        // this.seq.start(0.05)\n        // let now = Tone.now()\n        // this.synth.triggerAttackRelease(\"C4\", \"16n\")\n        // this.synth.triggerAttackRelease(\"E4\", \"16n\", now + 0.5)\n        // this.synth.triggerAttackRelease(\"G4\", \"16n\", now + 1)\n        // this.synth.triggerAttackRelease(\"B4\", \"16n\", now + 1.5)\n    }\n    setVolume() { }\n}\n"],"file":"SynthBeep.js"}