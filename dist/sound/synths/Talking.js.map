{"version":3,"sources":["../../../src/sound/synths/Talking.ts"],"names":["envelope","attack","sustain","decay","root","fourth","third","fifth","sixth","maj7","oct","intervals","VOICES","Talking","buffs","synths","i","push","panner","Tone","Panner","toDestination","player","Player","fadeIn","fadeOut","connect","init","then","ready","config","currSynth","set","pan","volume","value","vol","buffer","buff","length","Math","floor","random","interval","rate","playbackRate","console","log","start","now","cb","Offline","vowels","Promise","all","map","args","createBuff","_transport","vowelUgen","Frequency","toFrequency","f1","f2","f3","pitch","Volume","filtf1","Filter","Q","filtf2","filtf3","ampEnv","AmplitudeEnvelope","release","fan","noi","Noise","type","osc","Oscillator","frequency","triggerAttackRelease"],"mappings":"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","sourcesContent":["import { ITonerPlayConfig } from 'sound/IToner';\nimport * as Tone from 'tone'\nimport { ToneAudioBuffer } from 'tone';\nimport { ITonerSynth } from '../ITonerSynth';\n\nconst envelope = {\n    attack: 0.01,\n    sustain: 1.0,\n    decay: 0.01\n}\nconst root = 261.63 // G4\n\nconst fourth = 349.23\nconst third = 329.63\nconst fifth = 392.\nconst sixth = 440.\nconst maj7 = 493.88\nconst oct = 523.25\n\n// const intervals = [root, fifth, fifth, third, maj7, fourth, sixth, oct]\nconst intervals = [root, fifth]\n\nconst VOICES = 8\n\nexport interface ITalkingPlayConfig extends ITonerPlayConfig {\n    inst: 'talking'\n    buff: number\n    rate: number\n}\n\nexport class Talking implements ITonerSynth {\n    id: string = 'talking'\n    synths: { player: Tone.Player, panner: Tone.Panner }[]\n    buffs: Tone.ToneAudioBuffer[]\n    volume: number = 0.75\n    ready: boolean = false\n    currSynth: number = 0\n    constructor() {\n        this.buffs = []\n        this.synths = []\n        for (let i = 0; i < VOICES; i++) {\n            this.synths.push((() => {\n                const panner = new Tone.Panner(0).toDestination()\n                return {\n                    player: new Tone.Player({ fadeIn: 0.015, fadeOut: 0.015 }).connect(panner),\n                    panner: panner\n                }\n            })())\n        }\n        this.init().then(() => this.ready = true)\n\n    }\n\n    play(config: ITalkingPlayConfig) {\n        if (this.ready) {\n            // if (config.pan) this.panner.set({ pan: config.pan })\n            // this.panner.set({ pan: (Math.random() * 2) - 1 })\n            this.synths[this.currSynth].panner.set({ pan: config.pan })\n            this.synths[this.currSynth].player.volume.value = (config.vol ?? 0.5) * -18\n            const buffer = this.buffs[config.buff % this.buffs.length] ?? this.buffs[Math.floor(Math.random() * this.buffs.length)]\n            this.synths[this.currSynth].player.buffer = buffer\n            const interval = config.rate ? (intervals[config.rate % intervals.length] / root) : (intervals[Math.floor(Math.random() * intervals.length)] / root)\n            this.synths[this.currSynth].player.playbackRate = interval\n            console.log(config.rate, buffer, interval);\n            this.synths[this.currSynth].player.start(Tone.now() + 0.01)\n            this.currSynth = (this.currSynth + 1) % VOICES\n        }\n    }\n\n    setVolume() { }\n\n    private async createBuff(cb: (context: Tone.OfflineContext) => void): Promise<ToneAudioBuffer> {\n        return await Tone.Offline(cb, 0.25)\n    }\n\n    async init() {\n        // https://soundbridge.io/formants-vowel-sounds/\n        const vowels = [\n            [570, 840, 2410, 60],\n            [300, 870, 2240, 60],\n            [440, 1020, 2240, 60],\n            [730, 1090, 2440, 60],\n            [520, 1190, 2390, 60],\n            [490, 1350, 1690, 60],\n            [660, 1720, 2410, 60],\n            [530, 1840, 2480, 60],\n            [390, 1990, 2550, 60],\n            [270, 2290, 3010, 60]\n        ]\n        Promise.all<ToneAudioBuffer>(vowels.map((args): Promise<ToneAudioBuffer> => {\n            return this.createBuff((_transport) => { this.vowelUgen(args[0], args[1], args[2], Tone.Frequency(args[3], \"midi\").toFrequency()) })\n        })).then(buffs => this.buffs = buffs)\n    }\n\n    private vowelUgen(f1: number, f2: number, f3: number, pitch: number) {\n        // https://github.com/benfordslaw/vowel-sound-generator/blob/main/sketch.js\n        const vol = new Tone.Volume(0).toDestination();\n\n        const filtf1 = new Tone.Filter(f1, \"bandpass\").connect(vol);\n        filtf1.Q.value = 5.0;\n\n        const filtf2 = new Tone.Filter(f2, \"bandpass\").connect(vol);\n        filtf2.Q.value = 13.0;\n\n        const filtf3 = new Tone.Filter(f3, \"bandpass\").connect(vol);\n        filtf3.Q.value = 14.0;\n\n        const ampEnv = new Tone.AmplitudeEnvelope({\n            attack: 0.1,\n            decay: 0.2,\n            sustain: 1.0,\n            release: 0.8\n        }).fan(filtf1, filtf2, filtf3);\n\n        //noise adds a little natural-ness\n        const noi = new Tone.Noise({\n            type: \"pink\",\n            volume: -16\n        }).connect(ampEnv).start()\n\n        const osc = new Tone.Oscillator({\n            type: \"sawtooth\",\n            frequency: pitch,\n            volume: -8\n        }).connect(ampEnv).start()\n\n        ampEnv.triggerAttackRelease(\"8t\");\n    }\n\n}\n"],"file":"Talking.js"}