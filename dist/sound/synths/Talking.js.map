{"version":3,"sources":["../../../src/sound/synths/Talking.ts"],"names":["envelope","attack","sustain","decay","root","fourth","third","fifth","maj7","intervals","VOICES","buffs","panner","Tone","Panner","toDestination","synths","i","push","Player","fadeIn","fadeOut","connect","init","then","ready","vol","pan","set","Math","random","currSynth","volume","value","buffer","floor","length","playbackRate","start","cb","Offline","vowels","Promise","all","map","args","createBuff","_transport","vowelUgen","Frequency","toFrequency","f1","f2","f3","pitch","Volume","filtf1","Filter","Q","filtf2","filtf3","ampEnv","AmplitudeEnvelope","release","fan","noi","Noise","type","osc","Oscillator","frequency","triggerAttackRelease"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\nimport { ToneAudioBuffer } from 'tone';\nimport ITonerSynth from '../ITonerSynth';\n\nconst envelope = {\n    attack: 0.01,\n    sustain: 1.0,\n    decay: 0.01\n}\nconst root = 261.63 // G4\n\nconst fourth = 349.23\nconst third = 329.63\nconst fifth = 392\nconst maj7 = 493.88\n\nconst intervals = [root, fifth, fifth, third, maj7]\n\nconst VOICES = 8\n\nexport default class implements ITonerSynth {\n    id: string = 'talking'\n    synths: Tone.Player[]\n    panner: Tone.Panner\n    buffs: Tone.ToneAudioBuffer[]\n    volume: number = 0.75\n    ready: boolean = false\n    currSynth: number = 0\n    constructor() {\n        this.buffs = []\n        this.panner = new Tone.Panner(0).toDestination()\n        this.synths = []\n        for (let i = 0; i < VOICES; i++) {\n            this.synths.push(new Tone.Player({ fadeIn: 0.005, fadeOut: 0.005 }).connect(this.panner))\n        }\n        this.init().then(() => this.ready = true)\n\n    }\n\n    play(vol?: number, pan?: number) {\n        if (this.ready) {\n            if (pan) this.panner.set({ pan: pan })\n            this.panner.set({ pan: (Math.random() * 2) - 1 })\n            this.synths[this.currSynth].volume.value = vol ?? -12\n            this.synths[this.currSynth].buffer = this.buffs[Math.floor(Math.random() * this.buffs.length)]\n            this.synths[this.currSynth].playbackRate = intervals[Math.floor(Math.random() * intervals.length)] / root\n            this.synths[this.currSynth].start();\n            this.currSynth = (this.currSynth + 1) % VOICES\n        }\n    }\n\n    setVolume() { }\n\n    private async createBuff(cb: (context: Tone.OfflineContext) => void): Promise<ToneAudioBuffer> {\n        return await Tone.Offline(cb, 0.25)\n    }\n\n    async init() {\n        // https://soundbridge.io/formants-vowel-sounds/\n        const vowels = [\n            [570, 840, 2410, 60],\n            [300, 870, 2240, 60],\n            [440, 1020, 2240, 60],\n            [730, 1090, 2440, 60],\n            [520, 1190, 2390, 60],\n            [490, 1350, 1690, 60],\n            [660, 1720, 2410, 60],\n            [530, 1840, 2480, 60],\n            [390, 1990, 2550, 60],\n            [270, 2290, 3010, 60]\n        ]\n        Promise.all<ToneAudioBuffer>(vowels.map((args): Promise<ToneAudioBuffer> => {\n            return this.createBuff((_transport) => { this.vowelUgen(args[0], args[1], args[2], Tone.Frequency(args[3], \"midi\").toFrequency()) })\n        })).then(buffs => this.buffs = buffs)\n    }\n\n    private vowelUgen(f1: number, f2: number, f3: number, pitch: number) {\n        // https://github.com/benfordslaw/vowel-sound-generator/blob/main/sketch.js\n        const vol = new Tone.Volume(0).toDestination();\n\n        const filtf1 = new Tone.Filter(f1, \"bandpass\").connect(vol);\n        filtf1.Q.value = 5.0;\n\n        const filtf2 = new Tone.Filter(f2, \"bandpass\").connect(vol);\n        filtf2.Q.value = 13.0;\n\n        const filtf3 = new Tone.Filter(f3, \"bandpass\").connect(vol);\n        filtf3.Q.value = 14.0;\n\n        const ampEnv = new Tone.AmplitudeEnvelope({\n            attack: 0.1,\n            decay: 0.2,\n            sustain: 1.0,\n            release: 0.8\n        }).fan(filtf1, filtf2, filtf3);\n\n        //noise adds a little natural-ness\n        const noi = new Tone.Noise({\n            type: \"pink\",\n            volume: -16\n        }).connect(ampEnv).start()\n\n        const osc = new Tone.Oscillator({\n            type: \"sawtooth\",\n            frequency: pitch,\n            volume: -8\n        }).connect(ampEnv).start()\n\n        ampEnv.triggerAttackRelease(\"8t\");\n    }\n\n}\n"],"file":"Talking.js"}