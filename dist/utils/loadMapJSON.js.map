{"version":3,"sources":["../../src/utils/loadMapJSON.ts"],"names":["game","path","Promise","res","reject","scene","getScenes","then","key","catch","err","console","log"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEe,kBAASA,IAAT,EAA4BC,IAA5B,EAA0C;AACrD,SAAO,IAAIC,OAAJ,CAAyB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC7C,QAAIC,KAAK,GAAGL,IAAI,CAACK,KAAL,CAAWC,SAAX,CAAqB,IAArB,EAA2B,KAA3B,EAAkC,CAAlC,CAAZ;AACA,gCAAcD,KAAd,EAAqB,mCAAiBJ,IAAjB,CAArB,EAA6CA,IAA7C,EAAmDM,IAAnD,CAAwD,UAAAC,GAAG;AAAA,aAAIL,GAAG,CAACH,IAAD,CAAP;AAAA,KAA3D,EAA0ES,KAA1E,CAAgF,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAAnF;AACH,GAHM,CAAP;AAIH","sourcesContent":["import 'phaser'\nimport { getMapKeyNameRaw } from './getKeyNames'\nimport loadAfterLoad from './loadAfterLoad'\n\nexport default function(game: Phaser.Game, path: string) {\n    return new Promise<Phaser.Game>((res, reject) => {\n        let scene = game.scene.getScenes(true, false)[0]\n        loadAfterLoad(scene, getMapKeyNameRaw(path), path).then(key => res(game)).catch(err => console.log(err))\n    })\n}\n"],"file":"loadMapJSON.js"}