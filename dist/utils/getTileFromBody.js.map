{"version":3,"sources":["../../src/utils/getTileFromBody.ts"],"names":["go","tilesize","body","x_","Math","floor","center","x","y_","y"],"mappings":";;;;;;;AAAA;;AAEe,kBAASA,EAAT,EAA6DC,QAA7D,EAA8G;AACzH,MAAID,EAAE,CAACE,IAAP,EAAa;AACT,QAAMC,EAAE,GAAIC,IAAI,CAACC,KAAL,CAAYL,EAAE,CAACE,IAAH,CAAQI,MAAR,CAAeC,CAAhB,GAAqBN,QAAhC,IAA4CA,QAAxD;AACA,QAAMO,EAAE,GAAIJ,IAAI,CAACC,KAAL,CAAYL,EAAE,CAACE,IAAH,CAAQI,MAAR,CAAeG,CAAhB,GAAqBR,QAAhC,IAA4CA,QAAxD;AACA,WAAO;AAAEM,MAAAA,CAAC,EAAEJ,EAAE,GAAGF,QAAV;AAAoBQ,MAAAA,CAAC,EAAGD,EAAE,GAAGP,QAAN,GAAkB;AAAzC,KAAP;AACH,GAJD,MAIO;AACH,WAAO;AAAEM,MAAAA,CAAC,EAAE,CAAL;AAAQE,MAAAA,CAAC,EAAE;AAAX,KAAP;AACH;AACJ","sourcesContent":["import 'phaser'\n\nexport default function(go: Phaser.Types.Physics.Arcade.GameObjectWithBody, tilesize: number): Phaser.Types.Math.Vector2Like {\n    if (go.body) {\n        const x_ = (Math.floor((go.body.center.x) / tilesize) * tilesize)\n        const y_ = (Math.floor((go.body.center.y) / tilesize) * tilesize)\n        return { x: x_ / tilesize, y: (y_ / tilesize) + 1 }\n    } else {\n        return { x: 0, y: 0 }\n    }\n}\n"],"file":"getTileFromBody.js"}