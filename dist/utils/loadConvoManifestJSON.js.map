{"version":3,"sources":["../../src/utils/loadConvoManifestJSON.ts"],"names":["game","Promise","res","reject","cache","json","exists","scene","getScenes","get","convoManifest","then","key","catch","err"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEe,kBAASA,IAAT,EAA4B;AACvC,SAAO,IAAIC,OAAJ,CAAyB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC7C,QAAI,CAAEH,IAAI,CAACI,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,OAAvB,CAAN,EAAwCH,MAAM,CAAC,uBAAD,CAAN;AACxC,QAAII,KAAK,GAAGP,IAAI,CAACO,KAAL,CAAWC,SAAX,CAAqB,IAArB,EAA2B,KAA3B,EAAkC,CAAlC,CAAZ;AACA,gCAAcD,KAAd,EAAqB,gBAArB,EAAuCA,KAAK,CAACH,KAAN,CAAYC,IAAZ,CAAiBI,GAAjB,CAAqB,OAArB,EAA8BC,aAArE,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTV,MAAAA,GAAG,CAACF,IAAD,CAAH;AACH,KAHL,EAIKa,KAJL,CAIW,UAAAC,GAAG,EAAI;AAAEX,MAAAA,MAAM,gDAAN;AAAwD,KAJ5E;AAKH,GARM,CAAP;AASH","sourcesContent":["import 'phaser'\nimport loadAfterLoad from './loadAfterLoad'\n\nexport default function(game: Phaser.Game) {\n    return new Promise<Phaser.Game>((res, reject) => {\n        if (!(game.cache.json.exists('gdata'))) reject(\"No global data loaded\")\n        let scene = game.scene.getScenes(true, false)[0]\n        loadAfterLoad(scene, 'convo-manifest', scene.cache.json.get('gdata').convoManifest)\n            .then(key => {\n                res(game)\n            })\n            .catch(err => { reject(`Something wrong in retrieving convo manifest`) })\n    })\n}\n"],"file":"loadConvoManifestJSON.js"}