{"version":3,"sources":["../../src/utils/loadAfterLoad.ts"],"names":["scene","key","url","Promise","res","rej","load","json","cache","exists","once","keyy","file","start"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;iFAEe,iBAAeA,KAAf,EAAoCC,GAApC,EAAiDC,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJ,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BL,cAAAA,KAAK,CAACM,IAAN,CAAWC,IAAX,CAAgBN,GAAhB,EAAqBC,GAArB;;AACA,kBAAIF,KAAK,CAACQ,KAAN,CAAYD,IAAZ,CAAiBE,MAAjB,CAAwBR,GAAxB,CAAJ,EAAkC;AAC9BG,gBAAAA,GAAG,CAACH,GAAD,CAAH;AACH;;AACDD,cAAAA,KAAK,CAACM,IAAN,CAAWI,IAAX,CAAgB,cAAhB,EAAgC,UAACC,IAAD,EAAU;AACtC;AACA,oBAAIA,IAAI,KAAKV,GAAb,EAAkB;AACdG,kBAAAA,GAAG,CAACH,GAAD,CAAH;AACH;AACJ,eALD;AAMAD,cAAAA,KAAK,CAACM,IAAN,CAAWI,IAAX,CAAgB,WAAhB,EAA6B,UAACE,IAAD,EAAU;AACnC,oBAAIA,IAAI,CAACX,GAAL,KAAaA,GAAjB,EAAsB;AAClBI,kBAAAA,GAAG,CAACO,IAAD,CAAH;AACH;AACJ,eAJD;AAKAZ,cAAAA,KAAK,CAACM,IAAN,CAAWO,KAAX;AACH,aAjBM,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import 'phaser'\n\nexport default async function(scene: Phaser.Scene, key: string, url: string): Promise<string> {\n    return new Promise((res, rej) => {\n        scene.load.json(key, url)\n        if (scene.cache.json.exists(key)) {\n            res(key)\n        }\n        scene.load.once('filecomplete', (keyy) => {\n            // console.log(keyy)\n            if (keyy === key) {\n                res(key)\n            }\n        })\n        scene.load.once('loaderror', (file) => {\n            if (file.key === key) {\n                rej(file)\n            }\n        })\n        scene.load.start()\n    })\n}\n"],"file":"loadAfterLoad.js"}