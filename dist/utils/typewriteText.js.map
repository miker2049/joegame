{"version":3,"sources":["../../src/utils/typewriteText.ts"],"names":["typewriteText","text","twindow","scene","speed","Promise","done","reject","readChars","global","talkingSpeed","char","appendMDText","then","v","undefined","str","basedelay","cb","length","i"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEO,SAASA,aAAT,CAAuBC,IAAvB,EAAqCC,OAArC,EAAwDC,KAAxD,EAA6EC,KAA7E,EAAiH;AACpH,SAAO,IAAIC,OAAJ,CAAY,UAACC,IAAD,EAAOC,MAAP,EAAkB;AACjCC,IAAAA,SAAS,CAACP,IAAD,EAAOG,KAAP,aAAOA,KAAP,cAAOA,KAAP,GAAgBK,kBAAOC,YAAvB,EAAqC,UAACC,IAAD,EAAkB;AAC5DT,MAAAA,OAAO,CAACU,YAAR,CAAqBD,IAArB;AACH,KAFQ,CAAT,CAEGE,IAFH,CAEQ,UAAAC,CAAC;AAAA,aAAIR,IAAI,CAACS,SAAD,CAAR;AAAA,KAFT;AAGH,GAJM,CAAP;AAKH;;SAEcP,S;;;;;uFAAf,iBAAyBQ,GAAzB,EAAsCC,SAAtC,EAAyDC,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,MADV,GACmBH,GAAG,CAACG,MADvB,EAEI;;AACSC,YAAAA,CAHb,GAGiB,CAHjB;;AAAA;AAAA,kBAGoBA,CAAC,GAAGD,MAHxB;AAAA;AAAA;AAAA;;AAIcR,YAAAA,IAJd,GAIqBK,GAAG,CAACI,CAAD,CAJxB;AAKQF,YAAAA,EAAE,CAACP,IAAD,CAAF;;AALR,kBAMYA,IAAI,IAAI,GANpB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQkB,2BAAQM,SAAS,GAAG,GAApB,CARlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWkB,2BAAQA,SAAR,CAXlB;;AAAA;AAGgC,cAAEG,CAHlC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { ITextBox } from '../components/TextWindow'\nimport timeout from './awaitTimeout'\nimport global from '../defaults'\nimport 'phaser'\n\nexport function typewriteText(text: string, twindow: ITextBox, scene: Phaser.Scene, speed?: number): Promise<undefined> {\n    return new Promise((done, reject) => {\n        readChars(text, speed ?? global.talkingSpeed, (char: string) => {\n            twindow.appendMDText(char)\n        }).then(v => done(undefined))\n    })\n}\n\nasync function readChars(str: string, basedelay: number, cb: (T: string) => void) {\n    const length = str.length\n    // let debugTime = 0\n    for (let i = 0; i < length; ++i) {\n        const char = str[i]\n        cb(char)\n        if (char == ' ') {\n            // debugTime += basedelay * 1.7\n            await timeout(basedelay * 1.7)\n        } else {\n            // debugTime += basedelay\n            await timeout(basedelay)\n        }\n    }\n    // console.log(`debugTime readChars ${debugTime}`)\n\n}\n\n\n"],"file":"typewriteText.js"}