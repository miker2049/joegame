{"version":3,"sources":["../../src/utils/hashToArr.ts"],"names":["hashToArr","str","amt","hash","i","chr","length","charCodeAt","Math","abs","hashStr","toString","slice","map","item","Number"],"mappings":";;;;;;;;;;;AAAA;AACO,SAASA,SAAT,CAAmBC,GAAnB,EAAgCC,GAAhC,EAAuD;AAC1D,MAAIC,IAAI,GAAG,CAAX;AAAA,MAAcC,CAAd;AAAA,MAAiBC,GAAjB;AACA,MAAIJ,GAAG,CAACK,MAAJ,KAAe,CAAnB,EAAsB,OAAO,CAACH,IAAD,CAAP;;AACtB,OAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,GAAG,CAACK,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC7BC,IAAAA,GAAG,GAAGJ,GAAG,CAACM,UAAJ,CAAeH,CAAf,CAAN;AACAD,IAAAA,IAAI,GAAI,CAACA,IAAI,IAAI,CAAT,IAAcA,IAAf,GAAuBE,GAA9B;AACAF,IAAAA,IAAI,IAAI,CAAR,CAH6B,CAGlB;AACd;;AACDA,EAAAA,IAAI,GAAGK,IAAI,CAACC,GAAL,CAASN,IAAT,CAAP;AACA,MAAIO,OAAO,GAAGP,IAAI,CAACQ,QAAL,EAAd;AACAD,EAAAA,OAAO,GAAGA,OAAO,GAAGA,OAApB,CAV0D,CAW1D;AACA;;AACA,SAAO,iCAAIA,OAAO,CAACE,KAAR,CAAcV,GAAG,GAAG,CAAC,CAArB,CAAJ,EAA6BW,GAA7B,CAAiC,UAACC,IAAD;AAAA,WAAUC,MAAM,CAACD,IAAD,CAAhB;AAAA,GAAjC,CAAP;AACH;;AAAA","sourcesContent":["//https://stackoverflow.com/a/7616484\nexport function hashToArr(str: string, amt: number): number[] {\n    let hash = 0, i, chr;\n    if (str.length === 0) return [hash];\n    for (i = 0; i < str.length; i++) {\n        chr = str.charCodeAt(i);\n        hash = ((hash << 7) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    hash = Math.abs(hash)\n    let hashStr = hash.toString()\n    hashStr = hashStr + hashStr\n    // assert(hash.toString().length >= amt, 'hash is big enough')\n    // console.log(hash, \"HASH length\")\n    return [...hashStr.slice(amt * -1)].map((item) => Number(item));\n};\n"],"file":"hashToArr.js"}