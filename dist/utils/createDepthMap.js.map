{"version":3,"sources":["../../src/utils/createDepthMap.ts"],"names":["game","mapjsonpath","mapjson","cache","json","get","layers","map","l","i","name","Map","registry","remove","set"],"mappings":";;;;;;;AAAA;;AAEA;;AAEe,kBAASA,IAAT,EAA4BC,WAA5B,EAAuD;AAClE,MAAMC,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,mCAAiBJ,WAAjB,CAApB,CAAhB;AACA,MAAMK,MAA0B,GAAGJ,OAAO,CAACI,MAAR,CAAeC,GAAf,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAU,CAACD,CAAC,CAACE,IAAH,EAASD,CAAT,CAAV;AAAA,GAAnB,CAAnC;AACA,MAAMF,GAAG,GAAG,IAAII,GAAJ,CAAwBL,MAAxB,CAAZ;AACAN,EAAAA,IAAI,CAACY,QAAL,CAAcC,MAAd,CAAqB,UAArB;AACAb,EAAAA,IAAI,CAACY,QAAL,CAAcE,GAAd,CAAkB,UAAlB,EAA8BP,GAA9B;AACH","sourcesContent":["import 'phaser'\nimport TiledRawJSON from '../types/TiledRawJson';\nimport { getMapKeyNameRaw } from './getKeyNames'\n\nexport default function(game: Phaser.Game, mapjsonpath: string): void {\n    const mapjson = game.cache.json.get(getMapKeyNameRaw(mapjsonpath)) as TiledRawJSON\n    const layers: [string, number][] = mapjson.layers.map((l, i) => [l.name, i])\n    const map = new Map<string, number>(layers)\n    game.registry.remove('depthmap')\n    game.registry.set('depthmap', map)\n}\n"],"file":"createDepthMap.js"}