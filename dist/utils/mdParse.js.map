{"version":3,"sources":["../../src/utils/mdParse.ts"],"names":["mdParse","input","html","htmlToElement","template","document","createElement","trim","innerHTML","content","firstChild"],"mappings":";;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACe,SAASA,OAAT,CAAiBC,KAAjB,EAAwC;AACnD,MAAIC,IAAI,GAAG,qBAAOD,KAAP,CAAX,CADmD,CAEnD;;AACA,SAAOC,IAAP;AACH;;AAED,SAASC,aAAT,CAAuBD,IAAvB,EAAkD;AAC9C,MAAIE,QAA6B,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAApC;AACAJ,EAAAA,IAAI,GAAGA,IAAI,CAACK,IAAL,EAAP,CAF8C,CAE1B;;AACpBH,EAAAA,QAAQ,CAACI,SAAT,GAAqBN,IAArB;AACA,SAAOE,QAAQ,CAACK,OAAT,CAAiBC,UAAxB;AACH","sourcesContent":["import marked from \"marked\";\n\n/**\n * takes a string and returns an html element\n * {string}:\n */\nexport default function mdParse(input: string): string {\n    let html = marked(input);\n    // let element: HTMLElement = htmlToElement(html);\n    return html;\n}\n\nfunction htmlToElement(html: string): HTMLElement {\n    var template: HTMLTemplateElement = document.createElement('template');\n    html = html.trim(); // Never return a text node of whitespace as the result\n    template.innerHTML = html;\n    return template.content.firstChild as HTMLElement;\n}\n"],"file":"mdParse.js"}