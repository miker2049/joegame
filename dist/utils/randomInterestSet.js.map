{"version":3,"sources":["../../src/utils/randomInterestSet.ts"],"names":["map","amount","start","bounds","boundss","x","y","width","height","rect","Phaser","Geom","Rectangle","filtertiles","getTilesWithinShape","tiles","i","push","getRandomValidTile","item","arr","tile"],"mappings":";;;;;;;;;AAAA;;AACA;;AACe,kBAASA,GAAT,EAAuCC,MAAvC,EAAwDC,KAAxD,EAA0FC,MAA1F,EAA4J;AACvK,MAAMC,OAAO,GAAGD,MAAH,aAAGA,MAAH,cAAGA,MAAH,GAAa;AAAEE,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAEP,GAAG,CAACO,KAAzB;AAAgCC,IAAAA,MAAM,EAAER,GAAG,CAACQ;AAA5C,GAA1B;AACA,MAAMC,IAAI,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,SAAhB,CAA0BR,OAAO,CAACC,CAAlC,EAAqCD,OAAO,CAACE,CAA7C,EAAgDF,OAAO,CAACG,KAAxD,EAA+DH,OAAO,CAACI,MAAvE,CAAb;AACA,MAAMK,WAAW,GAAGb,GAAG,CAACc,mBAAJ,CAAwBL,IAAxB,CAApB;AACA,MAAIM,KAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAACf,MAAD,aAACA,MAAD,cAACA,MAAD,GAAW,CAAX,IAAgB,CAApC,EAAuCe,CAAC,EAAxC,EAA4C;AACxCD,IAAAA,KAAK,CAACE,IAAN,CAAWC,kBAAkB,CAACL,WAAD,CAA7B;AACH;;AACD,SAAOE,KAAK,CAACf,GAAN,CAAU,UAACmB,IAAD,EAAOH,CAAP,EAAUI,GAAV,EAAkB;AAAE,WAAO;AAAEf,MAAAA,CAAC,EAAEc,IAAI,CAACd,CAAV;AAAaC,MAAAA,CAAC,EAAEa,IAAI,CAACb;AAArB,KAAP;AAAiC,GAA/D,CAAP;AACH;;AAED,SAASY,kBAAT,CAA4BH,KAA5B,EAAiF;AAC7E,MAAIM,IAAI,GAAG,yBAAQN,KAAR,EAAe,CAAf,CAAX;AACA,SAAOM,IAAP;AACH","sourcesContent":["import 'phaser'\nimport shuffle from './shuffleArr'\nexport default function(map: Phaser.Tilemaps.Tilemap, amount?: number, start?: { x: number, y: number }, bounds?: { x: number, y: number, width: number, height: number }) {\n    const boundss = bounds ?? { x: 0, y: 0, width: map.width, height: map.height }\n    const rect = new Phaser.Geom.Rectangle(boundss.x, boundss.y, boundss.width, boundss.height)\n    const filtertiles = map.getTilesWithinShape(rect)\n    let tiles: any[] = []\n    for (let i = 0; i < (amount ?? 3) + 1; i++) {\n        tiles.push(getRandomValidTile(filtertiles))\n    }\n    return tiles.map((item, i, arr) => { return { x: item.x, y: item.y } });\n}\n\nfunction getRandomValidTile(tiles: Phaser.Tilemaps.Tile[]): Phaser.Tilemaps.Tile {\n    let tile = shuffle(tiles)[0]\n    return tile\n}\n"],"file":"randomInterestSet.js"}