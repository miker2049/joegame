{"version":3,"sources":["../../src/shaders/PlasmaPostFX.js"],"names":["fragShader","PlasmaPostFX","game","name","uniforms","set1f","loop","time","renderTarget","set2f","width","height","bindAndDraw","Phaser","Renderer","WebGL","Pipelines","PostFXPipeline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAU,6vBAAhB;;IA8BqBC,Y;;;;;AACnB,wBAAYC,IAAZ,EAAkB;AAAA;AAAA,6BACV;AACJA,MAAAA,IAAI,EAAJA,IADI;AAEJC,MAAAA,IAAI,EAAE,cAFF;AAGJH,MAAAA,UAAU,EAAVA,UAHI;AAIJI,MAAAA,QAAQ,EAAE,CACR,cADQ,EAER,OAFQ,EAGR,aAHQ;AAJN,KADU;AAWjB;;;;WAED,uBAAc;AACZ,WAAKC,KAAL,CAAW,OAAX,EAAoB,KAAKH,IAAL,CAAUI,IAAV,CAAeC,IAAf,GAAsB,IAA1C;AACD;;;WAED,gBAAOC,YAAP,EAAqB;AACnB,WAAKC,KAAL,CAAW,aAAX,EAA0BD,YAAY,CAACE,KAAvC,EAA8CF,YAAY,CAACG,MAA3D;AAEA,WAAKC,WAAL,CAAiBJ,YAAjB;AACD;;;EAtBuCK,MAAM,CAACC,QAAP,CAAgBC,KAAhB,CAAsBC,SAAtB,CAAgCC,c","sourcesContent":["const fragShader = `\n#define SHADER_NAME PLASMA_FS\n\nprecision mediump float;\n\nuniform sampler2D uMainSampler;\nuniform float uTime;\nuniform vec2 uResolution;\n\nvarying vec2 outTexCoord;\n\nvoid main()\n{\n    vec2 p = -1.0 + 2.0 * gl_FragCoord.xy / uResolution.xy;\n\n    float x = p.x;\n    float y = p.y;\n    float mov0 = x+y+cos(sin(uTime)*2.0)*100.+sin(x/100.)*1000.;\n    float mov1 = y / 0.9 +  uTime;\n    float mov2 = x / 0.2;\n    float c1 = abs(sin(mov1+uTime)/2.+mov2/2.-mov1-mov2+uTime);\n    float c2 = abs(sin(c1+sin(mov0/1000.+uTime)+sin(y/40.+uTime)+sin((x+y)/100.)*3.));\n    float c3 = abs(sin(c2+cos(mov1+mov2+c2)+cos(mov2)+sin(x/1000.)));\n\n    vec4 pixel = texture2D(uMainSampler, outTexCoord);\n\n    gl_FragColor = pixel * vec4(c1, c2, c3, 1);\n}\n`;\n\nexport default class PlasmaPostFX extends Phaser.Renderer.WebGL.Pipelines.PostFXPipeline {\n  constructor(game) {\n    super({\n      game,\n      name: 'PlasmaPostFX',\n      fragShader,\n      uniforms: [\n        'uMainSampler',\n        'uTime',\n        'uResolution'\n      ]\n    });\n  }\n\n  onPreRender() {\n    this.set1f('uTime', this.game.loop.time / 1000);\n  }\n\n  onDraw(renderTarget) {\n    this.set2f('uResolution', renderTarget.width, renderTarget.height);\n\n    this.bindAndDraw(renderTarget);\n  }\n}\n"],"file":"PlasmaPostFX.js"}