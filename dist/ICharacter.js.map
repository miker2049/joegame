{"version":3,"sources":["../src/ICharacter.ts"],"names":[],"mappings":";;AAAA","sourcesContent":["import 'phaser'\nimport { Interpreter } from 'xstate'\nimport { ILevelComponents, IPathfinder } from './ILevel'\nimport { CharMoveAnims, Dir } from './joegameTypes'\nimport { MoveMachineContext } from './components/MoveMachine'\nimport { ITextBox } from './components/TextWindow'\n\nexport interface CharacterConfig {\n    level: ILevelComponents\n    x: number\n    y: number\n    name: string\n    texture: string\n    anims: {\n        north: string\n        south: string\n        east: string\n        west: string\n    }\n    speed: number\n    scale: number\n    body?: {\n        offsetY?: number\n        offsetX?: number\n        width?: number\n        height?: number\n    },\n    dashDistance: number,\n    depth?: number\n}\n\nexport interface IPathmover {\n\n}\n\nexport interface ICharacterControl {\n    charBody: Phaser.Physics.Arcade.Body\n    changeGroundVel(vel: Phaser.Types.Math.Vector2Like): void\n    move(dir: Dir): void\n    dash(dir: Dir): void\n    face(dir: Dir): void\n    stop(face?: Dir): void\n    align(): Phaser.Types.Math.Vector2Like\n    jumpUp(): void\n    jumpBack(dir: Dir): void\n    transport(x: number, y: number): void\n    transportNudge(x: number, y: number): void\n    playAnim(anim: string): void\n    minusCharge(): void\n}\n\nexport interface ICharacterUIControl {\n    showDashboxes(): void\n    minusDashbox(): void\n    showLabel(): void\n    hideLabel(): void\n    speak(msg: string, speed?: number): Promise<any>\n    voxbox: ITextBox\n}\n\nexport interface ICharacterSettings {\n    speed: number\n    name: string\n    dashDistance: number\n    charge: number\n    animKeys: CharMoveAnims\n}\n\nexport interface ICharacterPrivate {\n    dashDrag: number\n    dashVel: number\n    sprite: Phaser.GameObjects.Sprite\n}\n\nexport interface ICharacterState {\n    depth: number\n    facing: Dir\n    onPlatform: boolean\n    auto: boolean\n    player: boolean\n    groundVel: Phaser.Types.Math.Vector2Like\n}\n\nexport interface ICharacterMoveMachine {\n    moveMachine: Interpreter<MoveMachineContext>\n}\n\nexport interface ICharacterNPCMachine {\n    start(): void\n    pause(): void\n    kill(): void\n    npcMachine: Interpreter<any>\n}\n\nexport interface ICharacter extends ICharacterControl, ICharacterUIControl, ICharacterPrivate, ICharacterSettings, ICharacterState, Phaser.GameObjects.Container { }\nexport interface INPC extends ICharacter, ICharacterNPCMachine { }\nexport interface IPlayer extends ICharacter, ICharacterMoveMachine { }\n"],"file":"ICharacter.js"}