{"version":3,"sources":["../../src/factories/createNPCsFromLayer.ts"],"names":["layer","level","depth","map","getObjectLayer","interestSets","objects","obj_","name","push","x","y","NPCtype","type","console","log"],"mappings":";;;;;;;;;;;;;AAAA;;AAKA;;;;;;;;;;AAEe,iBAAUA,KAAV,EAAyBC,KAAzB,EAAkDC,KAAlD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,cACND,KAAK,CAACE,GAAN,CAAUC,cAAV,CAAyBJ,KAAzB,CADM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEX;AACA;AACIK,UAAAA,YAJO,GAIa,EAJb;AAAA,iDAKMJ,KAAK,CAACE,GAAN,CAAUC,cAAV,CAAyBJ,KAAzB,EAAgCM,OALtC;;AAAA;AAKX,gEAA0D;AAAjDC,cAAAA,IAAiD;;AACtD,kBAAIF,YAAY,CAACE,IAAI,CAACC,IAAN,CAAhB,EAA6B;AACzBH,gBAAAA,YAAY,CAACE,IAAI,CAACC,IAAN,CAAZ,CAAwBC,IAAxB,CAA6B;AAAEC,kBAAAA,CAAC,EAAEH,IAAI,CAACG,CAAV;AAAaC,kBAAAA,CAAC,EAAEJ,IAAI,CAACI,CAArB;AAAwBC,kBAAAA,OAAO,EAAEL,IAAI,CAACM;AAAtC,iBAA7B;AACH,eAFD,MAEO;AACHR,gBAAAA,YAAY,CAACE,IAAI,CAACC,IAAN,CAAZ,GAA0B,CAAC;AAAEE,kBAAAA,CAAC,EAAEH,IAAI,CAACG,CAAV;AAAaC,kBAAAA,CAAC,EAAEJ,IAAI,CAACI,CAArB;AAAwBC,kBAAAA,OAAO,EAAEL,IAAI,CAACM;AAAtC,iBAAD,CAA1B;AACH;AACJ,aAXU,CAYX;;AAZW;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAaMR,YAbN;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaFG,UAAAA,IAbE;AAcP;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAfO;AAgBP,iBAAM,wBAAUG,IAAV,EAAgBH,YAAY,CAACG,IAAD,CAA5B,EAAoCP,KAApC,CAAN;;AAhBO;AAAA;AAAA;;AAAA;AAiBV;;AAjBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import 'phaser'\nimport { ICharacter } from '../ICharacter'\nimport { ILevelComponents } from '../ILevel'\nimport { createNPCMachine, NPCContext, NPCEvent } from '../components/NPCMachine'\nimport { StateMachine } from 'xstate'\nimport createNPC from '../utils/createNPC'\n\nexport default function*(layer: string, level: ILevelComponents, depth?: number): Iterable<[ICharacter, StateMachine<NPCContext, any, NPCEvent>]> {\n    if (!level.map.getObjectLayer(layer)) { return }\n    // first, create an object with keys that correspond to the npc names\n    // that have values which are sets of locations in absolute pixels\n    let interestSets: any = {}\n    for (let obj_ of level.map.getObjectLayer(layer).objects) {\n        if (interestSets[obj_.name]) {\n            interestSets[obj_.name].push({ x: obj_.x, y: obj_.y, NPCtype: obj_.type })\n        } else {\n            interestSets[obj_.name] = [{ x: obj_.x, y: obj_.y, NPCtype: obj_.type }]\n        }\n    }\n    // now we iterate through our new object and create the npcs\n    for (let name in interestSets) {\n        // create the npc\n        console.log(interestSets)\n        yield createNPC(name, interestSets[name], level)\n    };\n\n}\n"],"file":"createNPCsFromLayer.js"}