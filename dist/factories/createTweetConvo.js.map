{"version":3,"sources":["../../src/factories/createTweetConvo.ts"],"names":["level","tx","ty","charGroup","convoID","mani","scene","cache","json","get","convoIDD","randomIndexx","match","convoJsonPath","find","entry","convo","users","Array","from","Set","map","tweet","username","charAmount","Math","min","length","listOfChars","game","character","filter","char","charGroups","includes","slice","chars","i","tileWidth","face","Dir","east","push","tileHeight","south","west","north","forEach","c","add","existing","tconvo","TweetConvo","arr","floor","random"],"mappings":"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","sourcesContent":["import loadAfterLoad from '../utils/loadAfterLoad'\nimport { ILevelComponents } from '../ILevel'\nimport createCharacter from './createCharacter'\nimport wikiData from '../utils/wikiData'\nimport { wikiCharacterEntry } from '../utils/parseWikiData'\nimport { ICharacter } from '../ICharacter'\nimport { Dir } from '../joegameTypes'\nimport TweetConvo from '../components/TweetConvo'\nimport shuffle from '../utils/shuffleArr'\n/*\n * Until further notice this takes tile coords\n */\nexport default async function(level: ILevelComponents, tx: number, ty: number, charGroup?: string, convoID?: string) {\n    const mani: string[] = level.scene.cache.json.get('convo-manifest')\n    const convoIDD = mani[randomIndexx(mani)].match(/(\\d+)(_single)?\\.json$/)![1]\n    const convoJsonPath: string = mani.find(entry => entry.match(convoIDD))!\n\n    // console.log('loading ' + convoIDD)\n    await loadAfterLoad(level.scene, convoIDD, 'assets/convos/' + convoJsonPath)\n    // console.log('loaded ' + convoIDD)\n    const convo = level.scene.cache.json.get(convoIDD) as any[]\n    let users = Array.from(new Set(convo.map(tweet => tweet.username as string)))\n    const charAmount = Math.min(users.length, 4)\n    let listOfChars: [string, wikiCharacterEntry][] = Array.from(wikiData(level.scene.game).character)\n    if (charGroup && charGroup !== 'all') {\n        listOfChars = listOfChars.filter(char => {\n            // console.log(char)\n            if (char[1].charGroups) {\n                return char[1].charGroups.includes(charGroup)\n            }\n        })\n    }\n    listOfChars = shuffle(listOfChars).slice(0, charAmount)\n    let chars: ICharacter[] = []\n    for (let i = 0; i < listOfChars.length; i++) {\n        if (i === 0) {\n            // to the west\n            const char = createCharacter(listOfChars[i][0], tx - level.map.tileWidth, ty, level)\n            char.face(Dir.east)\n            chars.push(char)\n        } else if (i === 1) {\n            // to the north\n            const char = createCharacter(listOfChars[i][0], tx, ty - level.map.tileHeight, level)\n            char.face(Dir.south)\n            chars.push(char)\n        } else if (i === 2) {\n            // to the east\n            const char = createCharacter(listOfChars[i][0], tx + level.map.tileWidth, ty, level)\n            char.face(Dir.west)\n            chars.push(char)\n        } else if (i === 3) {\n            // to the south\n            const char = createCharacter(listOfChars[i][0], tx, ty + level.map.tileHeight, level)\n            char.face(Dir.north)\n            chars.push(char)\n        }\n    }\n    chars.forEach(c => level.scene.add.existing(c))\n    // const characters = charAmount.map(n=>{\n    //     if(n===1){\n    //         createCharacter\n    //     }\n    // })\n    // console.log(convo)\n    let tconvo = new TweetConvo(chars, convo, users as string[], level)\n    return tconvo\n}\n\n\n\n\n\nfunction randomIndexx(arr: any[]) {\n    return Math.floor(Math.random() * arr.length)\n}\n"],"file":"createTweetConvo.js"}