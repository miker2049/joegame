{"version":3,"sources":["../../src/factories/createTilemap.ts"],"names":["scene","mapjsonpath","offsetX","offsetY","tilemap","make","key","tilesets","tileset","total","addTilesetImage","name","tileWidth","tileHeight","tileMargin","tileSpacing","layers","forEach","l","i","createLayer","createBlankLayer","setVisible","tilemapLayer","setCollisionByProperty","collides"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,kBAASA,KAAT,EAA8BC,WAA9B,EAAmDC,OAAnD,EAAqEC,OAArE,EAAgH;AAC3H,MAAMC,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAWD,OAAX,CAAmB;AAAEE,IAAAA,GAAG,EAAE,gCAAcL,WAAd;AAAP,GAAnB,CAAhB,CAD2H,CAE3H;AACA;;AAH2H,6CAIvGG,OAAO,CAACG,QAJ+F;AAAA;;AAAA;AAI3H,wDAAsC;AAAA,UAA7BC,OAA6B;;AAClC;AACA,UAAIA,OAAO,CAACC,KAAR,GAAgB,CAApB,EAAuB;AACnBL,QAAAA,OAAO,CAACM,eAAR,CAAwBF,OAAO,CAACG,IAAhC,EAAsCH,OAAO,CAACG,IAA9C,EAAoDH,OAAO,CAACI,SAA5D,EAAuEJ,OAAO,CAACK,UAA/E,EAA2FL,OAAO,CAACM,UAAnG,EAA+GN,OAAO,CAACO,WAAvH;AACH;AACJ,KAT0H,CAU3H;;AAV2H;AAAA;AAAA;AAAA;AAAA;;AAW3HX,EAAAA,OAAO,CAACY,MAAR,CAAeC,OAAf,CAAuB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7Bf,IAAAA,OAAO,CAACgB,WAAR,CAAoBF,CAAC,CAACP,IAAtB,EAA4BP,OAAO,CAACG,QAApC,EAA8CL,OAAO,IAAI,CAAzD,EAA4DC,OAAO,IAAI,CAAvE;AACH,GAFD;AAGAC,EAAAA,OAAO,CAACiB,gBAAR,CAAyB,WAAzB,EAAsCjB,OAAO,CAACG,QAA9C,EAAwDe,UAAxD,CAAmE,IAAnE,EAd2H,CAgB3H;;AACAlB,EAAAA,OAAO,CAACY,MAAR,CAAeC,OAAf,CAAuB,UAACC,CAAD,EAAO;AAAEA,IAAAA,CAAC,CAACK,YAAF,CAAeC,sBAAf,CAAsC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAtC;AAA2D,GAA3F;AACA,SAAOrB,OAAP;AACH","sourcesContent":["import 'phaser'\nimport { getMapKeyName } from '../utils/getKeyNames'\n\nexport default function(scene: Phaser.Scene, mapjsonpath: string, offsetX?: number, offsetY?: number): Phaser.Tilemaps.Tilemap {\n    const tilemap = scene.make.tilemap({ key: getMapKeyName(mapjsonpath) })\n    // const depthmap = scene.game.registry.get('depthmap')\n    //initialize tilesets, and also leave a reference to them so they can easily be used in making the layers\n    for (let tileset of tilemap.tilesets) {\n        // Note that here, to keep things simpler, every tileset is preloaded with the name of the filename itself, so two `tileset.name`s\n        if (tileset.total > 1) {\n            tilemap.addTilesetImage(tileset.name, tileset.name, tileset.tileWidth, tileset.tileHeight, tileset.tileMargin, tileset.tileSpacing);\n        }\n    }\n    // init all our layers...\n    tilemap.layers.forEach((l, i) => {\n        tilemap.createLayer(l.name, tilemap.tilesets, offsetX || 0, offsetY || 0)\n    })\n    tilemap.createBlankLayer('highlight', tilemap.tilesets).setVisible(true)\n\n    // collision for map\n    tilemap.layers.forEach((l) => { l.tilemapLayer.setCollisionByProperty({ collides: true }) })\n    return tilemap\n}\n"],"file":"createTilemap.js"}