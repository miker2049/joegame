{"version":3,"sources":["../../src/components/DialogueReader.ts"],"names":["DialogueReader","scene","yarnjson","registry","tilesize","mapTileSize","runner","Runner","load","setVariableStorage","allNodes","node","yarnNodes","push","title","registerCommands","registerFunction","args","Promise","resolve","setTimeout","console","log","type","point","x","y","sendTo","machines","get","onTransition","state","value","run"],"mappings":"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","sourcesContent":["import { Runner, BondageResults, YarnNode } from \"bondage\";\nimport { IMachineRegistry } from './MachineRegistry';\n\nexport default class DialogueReader {\n\n    runner: Runner\n    allNodes: string[]\n    currRun: Generator<BondageResults, BondageResults,undefined> | undefined\n    mapTileSize: number\n\n\n    constructor(scene: Phaser.Scene, yarnjson: object, private registry: IMachineRegistry, tilesize: number) {\n        this.mapTileSize = tilesize\n        this.runner = new Runner();\n        this.runner.load(yarnjson as YarnNode[]);\n        this.runner.setVariableStorage(scene.registry)\n        this.allNodes = []\n        for(const node in this.runner.yarnNodes){\n           this.allNodes.push(this.runner.yarnNodes[node].title);\n        }\n        this.registerCommands();\n    }\n\n    private registerCommands() {\n        this.runner.registerFunction('wait', async (args:[number]) => {\n            await new Promise(resolve=>{setTimeout(resolve,args[0])})\n        })\n        this.runner.registerFunction('moveChar',(args: [string,number,number,string])=>{\n            console.log(args[0], {type: 'MOVE_ON_PATH', point:{x: args[1]*this.mapTileSize, y: args[2]*this.mapTileSize}})\n            this.registry.sendTo(args[0], {type: 'MOVE_ON_PATH', point:{x: args[1]*this.mapTileSize, y: args[2]*this.mapTileSize}})\n        })\n        this.runner.registerFunction('moveCharSync',(args: [string,number,number,string])=>{\n            console.log(args[0], {type: 'MOVE_ON_PATH', point:{x: args[1]*this.mapTileSize, y: args[2]*this.mapTileSize}})\n            this.registry.sendTo(args[0], {type: 'MOVE_ON_PATH', point:{x: args[1]*this.mapTileSize, y: args[2]*this.mapTileSize}})\n            return new Promise(resolve=>{\n                this.registry.machines.get(args[0])!.onTransition(state=>{\n                    console.log(state)\n                    if(state.value === 'still'){\n                        resolve()\n                    }\n                })\n            })\n        })\n        this.runner.registerFunction('transportChar',(args: [string,number,number,string])=>{\n            this.registry.sendTo(args[0], {type: 'TRANSPORT', point:{x: args[1]*this.mapTileSize, y: args[2]*this.mapTileSize}})\n        })\n    }\n\n    getRunner(node: string): Generator<BondageResults, BondageResults,undefined>{\n        return this.runner.run(node)\n    }\n}\n"],"file":"DialogueReader.js"}