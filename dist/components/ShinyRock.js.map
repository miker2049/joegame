{"version":3,"sources":["../../src/components/ShinyRock.ts"],"names":["ShinyRock","scenemap","x","y","t_obj","engraved","ichingframe","Math","floor","random","scene","textures","get","frameTotal","progress","ProgressBar","width","height","machine","ShinyRockMachineConfig","actions","addEngraving","add","image","setScale","setDepth","depth","destroy","tweens","targets","cameras","main","zoom","duration","yoyo","delay","guards","done","start","MapObject","initial","states","alone","on","APPROACHED","selected","HIT","target","cond","type","entry"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AAGA;;;;;;IAEqBA,S;;;;;AAKjB,qBAAYC,QAAZ,EAA+BC,CAA/B,EAA0CC,CAA1C,EAAqDC,KAArD,EAAgG;AAAA;;AAAA;AAC5F,8BAAMH,QAAN,EAAeC,CAAf,EAAiBC,CAAjB,EAAmBC,KAAnB;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACA,UAAKC,WAAL,GAAmBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,QAAxB,EAAkCC,UAA3D,CAAnB;AACA,UAAKC,QAAL,GAAc,IAAIC,oBAAJ,CAAgB,MAAKL,KAArB,EAA4B,MAAKR,CAAL,GAAO,MAAKc,KAAL,GAAW,CAA9C,EAAiD,MAAKb,CAAL,GAAO,MAAKc,MAA7D,EAAoE,EAApE,EAAuE,IAAvE,CAAd;AACA,UAAKC,OAAL,GAAe,uBAAU,qBAAQC,sBAAR,EAA+B;AACpDC,MAAAA,OAAO,EAAC;AACJC,QAAAA,YAAY,EAAC,wBAAI;AACb,gBAAKX,KAAL,CAAWY,GAAX,CAAeC,KAAf,CAAqB,MAAKrB,CAAL,GAAO,MAAKc,KAAL,GAAW,CAAvC,EAAyC,MAAKb,CAAL,GAAQ,MAAKc,MAAL,GAAY,CAAZ,GAAc,GAA/D,EAAoE,QAApE,EAA6E,MAAKX,WAAlF,EAA+FkB,QAA/F,CAAwG,KAAxG,EAA+GC,QAA/G,CAAwH,MAAKC,KAAL,GAAW,CAAnI;;AACA,gBAAKZ,QAAL,CAAca,OAAd;;AACA,gBAAKjB,KAAL,CAAWkB,MAAX,CAAkBN,GAAlB,CAAsB;AAClBO,YAAAA,OAAO,EAAC,CAAC,MAAKnB,KAAL,CAAWoB,OAAX,CAAmBC,IAApB,CADU;AAElBC,YAAAA,IAAI,EAAE,KAFY;AAGlBC,YAAAA,QAAQ,EAAE,IAHQ;AAIlBC,YAAAA,IAAI,EAAC,IAJa;AAKlBC,YAAAA,KAAK,EAAE;AALW,WAAtB;AAOH;AAXG,OAD4C;AAcpDC,MAAAA,MAAM,EAAC;AACHC,QAAAA,IAAI,EAAC;AAAA,iBAAI,MAAKvB,QAAL,CAAcuB,IAAlB;AAAA;AADF;AAd6C,KAA/B,CAAV,CAAf;;AAkBA,UAAKnB,OAAL,CAAaoB,KAAb,GAvB4F,CA0B5F;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAzC4F;AA0C/F;;;EA/CkCC,mB;;;AAkDvC,IAAMpB,sBAAkD,GAAC;AACrDqB,EAAAA,OAAO,EAAE,OAD4C;AAErDC,EAAAA,MAAM,EAAC;AACHC,IAAAA,KAAK,EAAC;AACFC,MAAAA,EAAE,EAAC;AACCC,QAAAA,UAAU,EAAE;AADb;AADD,KADH;AAMHC,IAAAA,QAAQ,EAAC;AACL;AACAF,MAAAA,EAAE,EAAC;AACCG,QAAAA,GAAG,EAAC,CACA;AAACC,UAAAA,MAAM,EAAC,UAAR;AAAoBC,UAAAA,IAAI,EAAE;AAA1B,SADA,EAEA,UAFA;AADL;AAFE,KANN;AAeH3C,IAAAA,QAAQ,EAAC;AACL4C,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,KAAK,EAAE,CAAC,cAAD;AAFF;AAfN;AAF8C,CAAzD","sourcesContent":["import 'phaser'\nimport MapObject from './MapObject';\nimport Tooltip from './Tooltip';\nimport SceneMap from './SceneMap';\nimport ProgressBar from './ProgressBar';\nimport approachArea from './approachArea';\n\nimport { interpret, Interpreter, Machine, MachineConfig } from 'xstate';\n\nexport default class ShinyRock extends MapObject {\n    engraved: boolean;\n    ichingframe: number;\n    progress: ProgressBar;\n    machine: Interpreter<any>;\n    constructor(scenemap: SceneMap,x: number, y: number, t_obj: Phaser.Types.Tilemaps.TiledObject  ){\n        super(scenemap,x,y,t_obj)\n        this.engraved = false;\n        this.ichingframe = Math.floor(Math.random()*this.scene.textures.get('iching').frameTotal)\n        this.progress=new ProgressBar(this.scene, this.x+this.width/2, this.y-this.height,32,0.01)\n        this.machine = interpret(Machine(ShinyRockMachineConfig,{\n            actions:{\n                addEngraving:()=>{\n                    this.scene.add.image(this.x+this.width/2,this.y-(this.height/2*0.9),'iching',this.ichingframe).setScale(0.155).setDepth(this.depth+1)\n                    this.progress.destroy()\n                    this.scene.tweens.add({\n                        targets:[this.scene.cameras.main],\n                        zoom: \"+=2\",\n                        duration: 4000,\n                        yoyo:true,\n                        delay: 300\n                    });\n                }\n            },\n            guards:{\n                done:()=>this.progress.done\n            }\n        }))\n        this.machine.start();\n\n\n        // new Tooltip(this.scene,this.x+this.width/2,this.y-this.height/2,this.width*1.5,\"hold <Shift> to engrave\")\n        // this.scene.physics.world.addOverlap()\n\n        //TODO breaks switching level\n        // this.scene.events.on('create',()=>{\n        //     this.scene.physics.world.addCollider(this,this.scene.player,()=>{\n        //         this.progress.incrementProgress(0.2)\n        //         console.log('hitittt')\n        //         this.machine.send('HIT')\n        //     })\n        //     let cll = approachArea(this,this.scene.player,()=>{\n        //         console.log(\"Approach!!\")\n        //         this.machine.send('APPROACHED')\n        //         cll.destroy();\n        //     })\n        // });\n    }\n}\n\nconst ShinyRockMachineConfig: MachineConfig<any,any,any>={\n    initial: 'alone',\n    states:{\n        alone:{\n            on:{\n                APPROACHED: 'selected'\n            }\n        },\n        selected:{\n            // entry: [''],\n            on:{\n                HIT:[\n                    {target:'engraved', cond: 'done'},\n                    'selected'\n                ]\n            }\n        },\n        engraved:{\n            type: 'final',\n            entry: ['addEngraving']\n        }\n    }\n}\n"],"file":"ShinyRock.js"}