{"version":3,"sources":["../../src/components/TweetConvo.ts"],"names":["urlRegex","TweetConvo","chars","convo","users","level","forEach","char","mach","map","tileWidth","pathfinder","x","y","intt","conv","charIndex","findIndex","val","username","length","text","replace","jumpUp","setDepth","defaults","charDepth","speak","voxbox","close","reverse","setTimeout","runConvo"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AACA;;AAKA,IAAMA,QAAQ,GAAG,uLAAjB;;IACqBC,U;AAIjB;AAEA,sBAAYC,KAAZ,EAAiCC,KAAjC,EAAiDC,KAAjD,EAAkEC,KAAlE,EAA2F;AAAA;AACvF,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb,CAHuF,CAIvF;;AACA,SAAKF,KAAL,CAAWI,OAAX,CAAmB,UAACC,IAAD,EAAU;AACzB,UAAI,IAAJ,EAAU;AACN;AAEA,YAAIC,IAAI,GAAG,kCAAiBD,IAAjB,EAAuBF,KAAK,CAACI,GAAN,CAAUC,SAAjC,EAA4CL,KAAK,CAACM,UAAlD,EAA8D,gCAAkBN,KAAK,CAACI,GAAxB,EAA6B,CAA7B,EAAgC;AAAEG,UAAAA,CAAC,EAAEL,IAAI,CAACK,CAAV;AAAaC,UAAAA,CAAC,EAAEN,IAAI,CAACM;AAArB,SAAhC,CAA9D,CAAX;AACA,YAAIC,IAAI,GAAG,uBAAUN,IAAV,CAAX,CAJM,CAKN;AACH;AACJ,KARD,EALuF,CAcvF;AACA;AACA;AACH;;;;;8FAED;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmBO,0BAAAA,IAFnB;AAGcC,0BAAAA,SAHd,GAG0B,KAAI,CAACZ,KAAL,CAAWa,SAAX,CAAqB,UAACC,GAAD,EAAS;AAC5C,mCAAOA,GAAG,KAAKH,IAAI,CAACI,QAApB;AACH,2BAFiB,IAEb,KAAI,CAACjB,KAAL,CAAWkB,MALxB;AAMYC,0BAAAA,IANZ,GAMmBN,IAAI,CAACM,IAAL,CAAUC,OAAV,CAAkB,UAAlB,EAA8B,EAA9B,CANnB;AAOQD,0BAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAatB,QAAb,EAAuB,EAAvB,CAAP;AACAqB,0BAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;;AACA,0BAAA,KAAI,CAACpB,KAAL,CAAWc,SAAX,EAAsBO,MAAtB;;AACA,0BAAA,KAAI,CAACrB,KAAL,CAAWI,OAAX,CAAmB,UAAAC,IAAI;AAAA,mCAAIA,IAAI,CAACiB,QAAL,CAAcC,kBAASC,SAAvB,CAAJ;AAAA,2BAAvB;;AACA,0BAAA,KAAI,CAACxB,KAAL,CAAWc,SAAX,EAAsBQ,QAAtB,CAA+B,EAA/B;;AAXR;AAAA,iCAYc,KAAI,CAACtB,KAAL,CAAWc,SAAX,EAAsBW,KAAtB,CAA4BN,IAA5B,EAAkC,EAAlC,CAZd;;AAAA;AAaQ,0BAAA,KAAI,CAACnB,KAAL,CAAWc,SAAX,EAAsBY,MAAtB,CAA6BC,KAA7B;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAE2B,KAAK1B,KAAL,CAAW2B,OAAX,EAF3B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAeIC,gBAAAA,UAAU,CAAC;AAAA,yBAAM,KAAI,CAACC,QAAL,EAAN;AAAA,iBAAD,EAAwB,IAAxB,CAAV;;AAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O","sourcesContent":["import { ILevelComponents } from '../ILevel'\nimport { createNPCMachine } from './NPCMachine'\nimport { ICharacter } from '../ICharacter'\nimport randomInterestSet from '../utils/randomInterestSet'\nimport { interpret } from 'xstate'\nimport defaults from '../defaults'\ninterface tweet {\n    text: string\n    username: string\n}\nconst urlRegex = /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/g\nexport default class TweetConvo {\n    chars: ICharacter[]\n    convo: tweet[]\n    users: string[]\n    // box:\n\n    constructor(chars: ICharacter[], convo: tweet[], users: string[], level: ILevelComponents) {\n        this.chars = chars\n        this.convo = convo\n        this.users = users\n        // this.chars[0].\n        this.chars.forEach((char) => {\n            if (true) {\n                // if ((() => Math.random())() > 0.5) {\n\n                let mach = createNPCMachine(char, level.map.tileWidth, level.pathfinder, randomInterestSet(level.map, 4, { x: char.x, y: char.y }))\n                let intt = interpret(mach)\n                // intt.start()\n            }\n        })\n        // this.chars.forEach(char=>{\n        //     char.scene.physics.add.overlap(char,level.player,)\n        // })\n    }\n\n    async runConvo() {\n\n        for await (let conv of this.convo.reverse()) {\n            const charIndex = this.users.findIndex((val) => {\n                return val === conv.username\n            }) % this.chars.length\n            let text = conv.text.replace(/@[^\\s]*/g, '')\n            text = text.replace(urlRegex, '')\n            text = text.replace(/\\s\\s+/g, '')\n            this.chars[charIndex].jumpUp()\n            this.chars.forEach(char => char.setDepth(defaults.charDepth))\n            this.chars[charIndex].setDepth(10)\n            await this.chars[charIndex].speak(text, 45)\n            this.chars[charIndex].voxbox.close()\n        }\n        setTimeout(() => this.runConvo(), 5000)\n    }\n}\n"],"file":"TweetConvo.js"}