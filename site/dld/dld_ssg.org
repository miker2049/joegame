:PROPERTIES:
:UNNUMBERED: t
:DIR: ../../assets/org/
:STARTUP: fninline
:END:
#+title: Dld ssg
#+begin_subtitle
Basic function and tools for site generation
#+end_subtitle

* Org mode ssg
Eschewing anything external liberally. The following is mostly a breakdown of =tufte.css= modified to conform with the classes org mode spits out.
* css file
:PROPERTIES:
:header-args: :tangle ../tufte.css
:END:
#+begin_src css
@charset "UTF-8";
#+end_src

** fonts
#+begin_src css
@font-face {
    font-family: "et-book";
    src: url("et-book/et-book-roman-line-figures/et-book-roman-line-figures.eot");
    src: url("et-book/et-book-roman-line-figures/et-book-roman-line-figures.eot?#iefix") format("embedded-opentype"), url("et-book/et-book-roman-line-figures/et-book-roman-line-figures.woff") format("woff"), url("et-book/et-book-roman-line-figures/et-book-roman-line-figures.ttf") format("truetype"), url("et-book/et-book-roman-line-figures/et-book-roman-line-figures.svg#etbookromanosf") format("svg");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "et-book";
    src: url("et-book/et-book-display-italic-old-style-figures/et-book-display-italic-old-style-figures.eot");
    src: url("et-book/et-book-display-italic-old-style-figures/et-book-display-italic-old-style-figures.eot?#iefix") format("embedded-opentype"), url("et-book/et-book-display-italic-old-style-figures/et-book-display-italic-old-style-figures.woff") format("woff"), url("et-book/et-book-display-italic-old-style-figures/et-book-display-italic-old-style-figures.ttf") format("truetype"), url("et-book/et-book-display-italic-old-style-figures/et-book-display-italic-old-style-figures.svg#etbookromanosf") format("svg");
    font-weight: normal;
    font-style: italic;
    font-display: swap;
}

@font-face {
    font-family: "et-book";
    src: url("et-book/et-book-bold-line-figures/et-book-bold-line-figures.eot");
    src: url("et-book/et-book-bold-line-figures/et-book-bold-line-figures.eot?#iefix") format("embedded-opentype"), url("et-book/et-book-bold-line-figures/et-book-bold-line-figures.woff") format("woff"), url("et-book/et-book-bold-line-figures/et-book-bold-line-figures.ttf") format("truetype"), url("et-book/et-book-bold-line-figures/et-book-bold-line-figures.svg#etbookromanosf") format("svg");
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "et-book-roman-old-style";
    src: url("et-book/et-book-roman-old-style-figures/et-book-roman-old-style-figures.eot");
    src: url("et-book/et-book-roman-old-style-figures/et-book-roman-old-style-figures.eot?#iefix") format("embedded-opentype"), url("et-book/et-book-roman-old-style-figures/et-book-roman-old-style-figures.woff") format("woff"), url("et-book/et-book-roman-old-style-figures/et-book-roman-old-style-figures.ttf") format("truetype"), url("et-book/et-book-roman-old-style-figures/et-book-roman-old-style-figures.svg#etbookromanosf") format("svg");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}
#+end_src
** root
#+begin_src css
html {
    font-size: 15px;
}

body {
    width: 87.5%;
    margin-left: auto;
    margin-right: auto;
    padding-left: 12.5%;
    font-family: et-book, Palatino, "Palatino Linotype", "Palatino LT STD", "Book Antiqua", Georgia, serif;
    background-color: #fffff8;
    color: #111;
    max-width: 1400px;
    counter-reset: sidenote-counter;
}
#+end_src
*** dark mode
#+begin_src css
@media (prefers-color-scheme: dark) {
    body {
        background-color: #151515;
        color: #ddd;
    }
}
#+end_src

** headers
One point: we opt for using =:with-title= in our publish config, giving an auto h1 tag within a header tag of the title keyword.  Then, after that org-mode export treats first level sections as h2.  This all fits nicely with the recommended tufte decisions, e.g.:
#+begin_quote
Organize your document with an article element inside your body tag. Inside that, use section tags around each logical grouping of text and headings.

Tufte CSS uses h1 for the document title, p with class subtitle for the document subtitle, h2 for section headings, and h3 for low-level headings. More specific headings are not supported. If you feel the urge to reach for a heading of level 4 or greater, consider redesigning your document...
#+end_quote
For the last part: no! we add fallback for deeper headings

#+begin_src css
h1 {
    font-weight: 400;
    margin-top: 4rem;
    margin-bottom: 1.5rem;
    font-size: 3.2rem;
    line-height: 1;
}

h2 {
    font-style: italic;
    font-weight: 400;
    margin-top: 2.1rem;
    margin-bottom: 1.4rem;
    font-size: 2.2rem;
    line-height: 1;
}

h3 {
    font-style: italic;
    font-weight: 400;
    font-size: 1.7rem;
    margin-top: 2rem;
    margin-bottom: 1.4rem;
    line-height: 1;
}

h4, h5, h6 {
    font-style: bold;
    font-size: 1.4rem;
    line-height: 2rem;
    margin-top: 1.4rem;
    margin-bottom: 1.4rem;
    padding-right: 0;
    vertical-align: baseline;
}

hr {
    display: block;
    height: 1px;
    width: 55%;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}
#+end_src

The only thing missing is an auto subtitle. This we solve by just using a special block, e.g.:
#+begin_src org
,#+begin_subtitle
Here we are with subtitle.
,#+end_subtitle
#+end_src
Then changing the original tufte-css to:
#+begin_src css
div.subtitle > p {
    font-style: italic;
    margin-top: 1rem;
    margin-bottom: 1rem;
    font-size: 1.8rem;
    display: block;
    line-height: 1;
}
#+end_src
** etc
#+begin_src css
.numeral {
    font-family: et-book-roman-old-style;
}

.danger {
    color: red;
}
#+end_src
** main structure
This replaces "article" and "section" in the original tufte
#+begin_src css
div#content {
    padding: 5rem 0rem;
}

div.outline-2, div.outline-3 {
    padding-top: 1rem;
    padding-bottom: 1rem;
}
#+end_src
** general text
#+begin_src css
p,
dl,
ol,
ul {
    font-size: 1.4rem;
    line-height: 2rem;
}

p {
    margin-top: 1.4rem;
    margin-bottom: 1.4rem;
    padding-right: 0;
    vertical-align: baseline;
}

div.outline-text-2 > p,
div.outline-text-2 > footer,
div.outline-text-2 > table,
div.outline-text-3 > p,
div.outline-text-3 > footer,
div.outline-text-3 > table {
    width: 55%;
}
.org-dl,
.org-ol,
.org-ul {
    width: 50%;
    -webkit-padding-start: 5%;
}

dt:not(:first-child),
li:not(:first-child) {
    margin-top: 0.25rem;
}
#+end_src
** chapter epigraphs
#+begin_src css
/* Chapter Epigraphs */
div.epigraph {
    margin: 5em 0;
}

div.epigraph > blockquote {
    margin-top: 3em;
    margin-bottom: 3em;
}

div.epigraph > blockquote,
div.epigraph > blockquote > p {
    font-style: italic;
}

div.epigraph > blockquote > footer {
    font-style: normal;
}

div.epigraph > blockquote > footer > cite {
    font-style: italic;
}
/* end chapter epigraphs styles */
#+end_src
** blockquote
#+begin_src css
blockquote {
    font-size: 1.4rem;
}

blockquote p {
    width: 55%;
    margin-right: 40px;
}

blockquote footer {
    width: 55%;
    font-size: 1.1rem;
    text-align: right;
}
#+end_src
** figure and img
#+begin_src css
figure, div.figure {
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    max-width: 55%;
    -webkit-margin-start: 0;
    -webkit-margin-end: 0;
    margin: 0 0 3em 0;
}

figcaption {
    float: right;
    clear: right;
    margin-top: 0;
    margin-bottom: 0;
    font-size: 1.1rem;
    line-height: 1.6;
    vertical-align: baseline;
    position: relative;
    max-width: 40%;
}

figure img.fullwidth + figcaption {
    margin-right: 24%;
}

img {
    max-width: 100%;
}
#+end_src
** links
#+begin_src css

/* Links: replicate underline that clears descenders */
a:link,
a:visited {
    color: inherit;
}

.no-tufte-underline:link {
    background: unset;
    text-shadow: unset;
}

a:link, .tufte-underline, .hover-tufte-underline:hover {
    text-decoration: none;
    background: -webkit-linear-gradient(#fffff8, #fffff8), -webkit-linear-gradient(#fffff8, #fffff8), -webkit-linear-gradient(currentColor, currentColor);
    background: linear-gradient(#fffff8, #fffff8), linear-gradient(#fffff8, #fffff8), linear-gradient(currentColor, currentColor);
    -webkit-background-size: 0.05em 1px, 0.05em 1px, 1px 1px;
    -moz-background-size: 0.05em 1px, 0.05em 1px, 1px 1px;
    background-size: 0.05em 1px, 0.05em 1px, 1px 1px;
    background-repeat: no-repeat, no-repeat, repeat-x;
    text-shadow: 0.03em 0 #fffff8, -0.03em 0 #fffff8, 0 0.03em #fffff8, 0 -0.03em #fffff8, 0.06em 0 #fffff8, -0.06em 0 #fffff8, 0.09em 0 #fffff8, -0.09em 0 #fffff8, 0.12em 0 #fffff8, -0.12em 0 #fffff8, 0.15em 0 #fffff8, -0.15em 0 #fffff8;
    background-position: 0% 93%, 100% 93%, 0% 93%;
}

@media screen and (-webkit-min-device-pixel-ratio: 0) {
    a:link, .tufte-underline, .hover-tufte-underline:hover {
        background-position-y: 87%, 87%, 87%;
    }
}

/* Adds dark mode */
@media (prefers-color-scheme: dark) {
    a:link, .tufte-underline, .hover-tufte-underline:hover {
        text-shadow: 0.03em 0 #151515, -0.03em 0 #151515, 0 0.03em #151515, 0 -0.03em #151515, 0.06em 0 #151515, -0.06em 0 #151515, 0.09em 0 #151515, -0.09em 0 #151515, 0.12em 0 #151515, -0.12em 0 #151515, 0.15em 0 #151515, -0.15em 0 #151515;
    }
}

a:link::selection,
a:link::-moz-selection {
    text-shadow: 0.03em 0 #b4d5fe, -0.03em 0 #b4d5fe, 0 0.03em #b4d5fe, 0 -0.03em #b4d5fe, 0.06em 0 #b4d5fe, -0.06em 0 #b4d5fe, 0.09em 0 #b4d5fe, -0.09em 0 #b4d5fe, 0.12em 0 #b4d5fe, -0.12em 0 #b4d5fe, 0.15em 0 #b4d5fe, -0.15em 0 #b4d5fe;
    background: #b4d5fe;
}

#+end_src
** sidenotes and margin notes
#+begin_src css

.sidenote,
.marginnote {
    float: right;
    clear: right;
    margin-right: -60%;
    width: 50%;
    margin-top: 0.3rem;
    margin-bottom: 0;
    font-size: 1.1rem;
    line-height: 1.3;
    vertical-align: baseline;
    position: relative;
}

.sidenote-number {
    counter-increment: sidenote-counter;
}

.sidenote-number:after,
.sidenote:before {
    font-family: et-book-roman-old-style;
    position: relative;
    vertical-align: baseline;
}

.sidenote-number:after {
    content: counter(sidenote-counter);
    font-size: 1rem;
    top: -0.5rem;
    left: 0.1rem;
}

.sidenote:before {
    content: counter(sidenote-counter) " ";
    font-size: 1rem;
    top: -0.5rem;
}

blockquote .sidenote,
blockquote .marginnote {
    margin-right: -82%;
    min-width: 59%;
    text-align: left;
}
#+end_src
** fullwidth
#+begin_src css
div img.fullwidth,
table.fullwidth {
    width: 100%;
}
#+end_src
** table
#+begin_src css
div.table-wrapper {
    overflow-x: auto;
    font-family: "Trebuchet MS", "Gill Sans", "Gill Sans MT", sans-serif;
}

#+end_src
** code and sans
#+begin_src css
.sans {
    font-family: "Gill Sans", "Gill Sans MT", Calibri, sans-serif;
    letter-spacing: .03em;
}

code, pre > code, div.org-src-container > pre.src {
    font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
    font-size: 1.0rem;
    line-height: 1.42;
    -webkit-text-size-adjust: 100%; /* Prevent adjustments of font size after orientation changes in iOS. See https://github.com/edwardtufte/tufte-css/issues/81#issuecomment-261953409 */
}

.sans > code, .sans > pre.src {
    font-size: 1.2rem;
}

h1 > code,
h2 > code,
h3 > code {
    font-size: 0.80em;
}

.marginnote > code,
.sidenote > code {
    font-size: 1rem;
}

pre > code, div.org-src-container > pre.src  {
    font-size: 0.9rem;
    width: 52.5%;
    margin-left: 2.5%;
    overflow-x: auto;
    display: block;
}

pre.fullwidth > code, div.fullwidth > pre.src  {
    width: 90%;
}

.fullwidth {
    max-width: 90%;
    clear:both;
}

span.newthought {
    font-variant: small-caps;
    font-size: 1.2em;
}

input.margin-toggle {
    display: none;
}

label.sidenote-number {
    display: inline-block;
    max-height: 2rem; /* should be less than or equal to paragraph line-height */
}

label.margin-toggle:not(.sidenote-number) {
    display: none;
}

.iframe-wrapper {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 */
    padding-top: 25px;
    height: 0;
}

.iframe-wrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
#+end_src
** breakpoint
#+begin_src css

@media (max-width: 760px) {
    body {
        width: 84%;
        padding-left: 8%;
        padding-right: 8%;
    }

    hr,
    div.outline-text-2 > p,
    div.outline-text-2 > footer,
    div.outline-text-2 > table,
    div.outline-text-3 > p,
    div.outline-text-3 > footer,
    div.outline-text-3 > table {
        width: 100%;
    }

    pre > code, div.org-src-container > pre.src {
        width: 97%;
    }

    .org-dl,
    .org-ol,
    .org-ul {
        width: 90%;
    }

    figure {
        max-width: 90%;
    }

    figcaption,
    figure img.fullwidth + figcaption {
        margin-right: 0%;
        max-width: none;
    }

    blockquote {
        margin-left: 1.5em;
        margin-right: 0em;
    }

    blockquote p,
    blockquote footer {
        width: 100%;
    }

    label.margin-toggle:not(.sidenote-number) {
        display: inline;
    }

    .sidenote,
    .marginnote {
        display: none;
    }

    .margin-toggle:checked + .sidenote,
    .margin-toggle:checked + .marginnote {
        display: block;
        float: left;
        left: 1rem;
        clear: both;
        width: 95%;
        margin: 1rem 2.5%;
        vertical-align: baseline;
        position: relative;
    }

    label {
        cursor: pointer;
    }

    div.table-wrapper,
    table {
        width: 85%;
    }

    img {
        width: 100%;
    }
}
#+end_src
* tufte test
** Sidenotes, marginnotes, and footnotes
Here is a sidenote.[fn:1: An /inline defined/ sidenote in fact.]  A sidenote is different from a marginnote by having a number, it is labeled. I am not sure if I even really want to use sidenotes, I prefer the ephemeral feeling of the marginnote, going along with the fact that it is always adjacent/aside.

The other one is the marginnote.[fn:tt: This one is also defined inline, but we should be able to do other wise.] It pops up with a symbol when there is not enough space to display it persistently on the side.  The sidenote also has this, but instead of symbol it a number.

We have defined both of those inline.  I will also define them in their own section here.[fn:2]  This distinction is actually only org mode wise, because we are just dealing with how they are compiled. Either way they are nice, and its good to have this flexibility.[fn:separate]

Speaking of the compile step, lets get some of the generating functions down.  These will take care of actually generating the html

#+name: html-macros
#+begin_src elisp :exports none :results html silent
(defun joegame/org-string-to-inner-html (INPUT)
  "Returns a HTML string from INPUT, without containing tag.  For shortcodes."
  (let* ((peed (replace-regexp-in-string "\n" ""  (org-export-string-as INPUT 'html t)))
         (unpeed (replace-regexp-in-string "</?p>" "" peed)))
    unpeed))

(defun joegame/tufte-sidenote (INPUT)
  "Tufte style sidenote"
  (let ((hash-id (substring (sha1 INPUT) 0 8))
        (finput (joegame/org-string-to-inner-html INPUT)))
    (format "<label for=\"%s\" class=\"margin-toggle sidenote-number\"></label>
<input type=\"checkbox\" id=\"%s\" class=\"margin-toggle\"/>
<span class=\"sidenote\"> %s </span>" hash-id hash-id finput)))

(defun joegame/tufte-marginnote (INPUT)
  "Tufte style sidenote"
  (let ((hash-id (substring (sha1 INPUT) 0 8))
        (finput (joegame/org-string-to-inner-html INPUT)))
    (format "<label for=\"%s\" class=\"margin-toggle\">&#8853;</label>
             <input type=\"checkbox\" id=\"%s\" class=\"margin-toggle\"/>
             <span class=\"marginnote\"> %s </span>" hash-id hash-id finput)))

(defun joegame/tufte-image (IMG &optional CAPTION)
  "Tufte styled img within a figure with caption."
  (let ((fimg (joegame/org-string-to-inner-html IMG))
        (fcap (joegame/org-string-to-inner-html (or CAPTION ""))))
    (format "<figure> %s <figcaption> %s </figcaption> </figure>" fimg fcap)))

#+end_src

Initially I had a hard time getting the parameter strings to take org formatting, like   \slash{}this\slash{} for italics and \ast{}this\ast{} for *bold*.  +Also strikethrough.+  This was fixed with the kinda dumb function =joegame/org-string-to-inner-html= which runs =org-export-string-as= and removes new lines.  Its a pre-export before the export, and then cuts through a lot of the crap, because evauluating .  It also removes unnecessary containing =<p>= tags. Then we have the two functions to generate the

All this only works by hijacking the default footnote html export process:
#+name: html-footnotes
#+begin_src elisp :results silent
(defun tufte-org-html-footnote-reference (ref contents info)
  (let* ((definition (org-export-get-footnote-definition ref info))
         (export (org-export-data-with-backend definition 'org info))
         (label (org-element-property :label ref)))
    (if (eq (string-to-number label) 0)
        (joegame/tufte-marginnote export)
        (joegame/tufte-sidenote export))))

(advice-add 'org-html-footnote-reference :override #'tufte-org-html-footnote-reference)
(advice-add 'org-html-footnote-section :override (lambda (_X) ""))
#+end_src

** Images
But other than the marginalia, the Tufte CSS gives us images.  Org will export =<img>= tags when simple url links are given:
#+begin_src org :exports code
#+caption: just a picture of trash!
[[file:../assets/images/trash.png]]
#+end_src
Turns into this:
#+caption: just a picture of trash!
[[file:../assets/images/trash.png]]
This part will need some work, because the assets can't be resolved with the same relative link as where it is now.  Really, everything ultimately will be in the sqlite database in org, and as a regular file on the server. See =org-add-link-type= when we get there.

** Org Publish
#+begin_src elisp :results output silent
(setq org-publish-project-alist '())
(let ((basedir (expand-file-name (project-root (project-current)))))
  (progn
    (defun dld-copy-css (_PROP) (shell-command
                                 (format "%scopy-tufte.sh" (expand-file-name (project-root (project-current))))))
    (defun prep-fun (_PROP)
      (setq org-export-htmlize-output-type nil)
      (setq org-export-htmlize-output-type nil)
      (setq org-footnote-define-inline 't))
    (add-to-list 'org-publish-project-alist `("dld"
                                              :publishing-directory
                                              ,(concat basedir "public/dld")
                                              :base-directory
                                              ,(concat basedir "site/dld")
                                              :with-toc nil
                                              :html-head-include-default-style nil
                                              :html-doctype "html5"
                                              :htmlized-source nil
                                              :htmlize-output nil
                                              :with-title 't
                                              :with-broken-links 't
                                              :html-html5-fancy 't
                                              :completion-function #'(lambda (_PROP) (dld-copy-css))
                                              :preparation-function prep-fun
                                              :html-head "<link rel=\"stylesheet\" href=\"../tufte.min.css\" type=\"text/css\"/>"))))

(setq org-attach-dir-relative 't)

#+end_src

* our org ssg
* dev server
#+begin_src elisp :results output silent
(save-buffer)

(org-publish "dld")
(setq dld-running-dev-server nil)
(if dld-running-dev-server
    (progn
      (delete-process "dld-http")
      (setq dld-running-dev-server nil)))

(setq dld-dev-server-http-server-bin
      (concat (expand-file-name
               (project-root (project-current)))
              "node_modules/http-server/bin/http-server"))

(setq dld-running-dev-server
       (start-process "dld-http"
                      "**DLD HTTP SERVER**"
                      dld-dev-server-http-server-bin
                      (concat (expand-file-name
                               (project-root (project-current))) "public")))
#+end_src
* lorem
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Augue neque gravida in fermentum et sollicitudin ac orci. In est ante in nibh mauris cursus. Dolor magna eget est lorem ipsum dolor. Amet luctus venenatis lectus magna fringilla. Laoreet id donec ultrices tincidunt arcu. Sed egestas egestas fringilla phasellus faucibus scelerisque eleifend donec. Non tellus orci ac auctor augue mauris. Amet nisl purus in mollis nunc sed id semper risus. Mus mauris vitae ultricies leo integer malesuada nunc vel. Aliquam sem et tortor consequat id porta nibh. Neque egestas congue quisque egestas. Cursus in hac habitasse platea dictumst quisque sagittis purus sit. Non sodales neque sodales ut etiam. Et tortor at risus viverra adipiscing at. Lectus nulla at volutpat diam ut venenatis tellus in metus. Faucibus purus in massa tempor.

Pretium fusce id velit ut tortor pretium viverra suspendisse potenti. Etiam sit amet nisl purus. Aliquam ut porttitor leo a diam sollicitudin tempor id. Amet nisl suscipit adipiscing bibendum. Habitant morbi tristique senectus et netus. Odio euismod lacinia at quis risus sed vulputate odio. Morbi enim nunc faucibus a pellentesque sit amet porttitor eget. Blandit libero volutpat sed cras ornare. A arcu cursus vitae congue mauris rhoncus aenean. Quis ipsum suspendisse ultrices gravida dictum fusce ut placerat orci. Faucibus interdum posuere lorem ipsum dolor sit amet consectetur adipiscing. Mauris commodo quis imperdiet massa tincidunt nunc. Eget duis at tellus at urna.

Feugiat in fermentum posuere urna nec. Ultricies leo integer malesuada nunc. Dictum non consectetur a erat nam at. Sagittis orci a scelerisque purus semper. Felis imperdiet proin fermentum leo vel. Placerat duis ultricies lacus sed turpis tincidunt id aliquet. Suspendisse in est ante in nibh mauris cursus mattis molestie. Elementum curabitur vitae nunc sed. Vitae congue mauris rhoncus aenean vel elit scelerisque mauris pellentesque. Augue neque gravida in fermentum et. Dictum sit amet justo donec enim diam vulputate. Mauris a diam maecenas sed. Ac odio tempor orci dapibus ultrices in iaculis nunc sed.

Faucibus pulvinar elementum integer enim neque volutpat ac tincidunt vitae. Ac turpis egestas sed tempus. Elit pellentesque habitant morbi tristique senectus et netus. In massa tempor nec feugiat nisl pretium fusce id velit. Purus sit amet luctus venenatis lectus magna. Purus in massa tempor nec feugiat nisl pretium fusce. Dignissim sodales ut eu sem integer vitae justo eget. Felis donec et odio pellentesque diam volutpat commodo sed. Facilisi etiam dignissim diam quis enim lobortis scelerisque fermentum. Rhoncus mattis rhoncus urna neque viverra justo nec. Risus viverra adipiscing at in tellus.


Felis bibendum ut tristique et egestas quis ipsum. At lectus urna duis convallis convallis tellus id interdum velit. Purus ut faucibus pulvinar elementum integer enim neque. Amet mauris commodo quis imperdiet massa tincidunt nunc pulvinar sapien.  Sit amet venenatis urna cursus eget nunc. Arcu odio ut sem nulla pharetra diam sit. Turpis nunc eget lorem dolor sed. Eget sit amet tellus cras adipiscing enim eu turpis egestas. Adipiscing vitae proin sagittis nisl rhoncus mattis. Pharetra sit amet aliquam id diam maecenas ultricies mi eget. Velit egestas dui id ornare. Porta nibh venenatis cras sed felis. Volutpat commodo sed egestas egestas fringilla phasellus faucibus scelerisque.
* Footnotes

[fn:2] Here I am all alllone.

[fn:separate] A "marginnote" defined externally
